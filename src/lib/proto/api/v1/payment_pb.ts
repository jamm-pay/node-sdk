// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,json_types=true"
// @generated from file api/v1/payment.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Buyer, BuyerJson, Contract, ContractJson, Customer, CustomerJson, Pagination, PaginationJson } from "./common_pb";
import { file_api_v1_common } from "./common_pb";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../protoc-gen-openapiv2/options/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/payment.proto.
 */
export const file_api_v1_payment: GenFile = /*@__PURE__*/
  fileDesc("", [file_api_v1_common, file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations]);

/**
 * # OffSessionPaymentRequest
 *
 * This message represents a request to process a payment directly within the application.
 * It contains the customer ID and charge details to be processed.
 *
 * @generated from message api.v1.OffSessionPaymentRequest
 */
export type OffSessionPaymentRequest = Message<"api.v1.OffSessionPaymentRequest"> & {
  /**
   * Merchant customer identifier string
   * Must start with "cus-" prefix followed by additional characters
   * This identifier references an existing merchant customer in the system
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * The charge details to be processed
   * Contains amount, currency, description, and other charge-specific information
   * Required to process the payment transaction
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialCharge;
};

/**
 * # OffSessionPaymentRequest
 *
 * This message represents a request to process a payment directly within the application.
 * It contains the customer ID and charge details to be processed.
 *
 * @generated from message api.v1.OffSessionPaymentRequest
 */
export type OffSessionPaymentRequestJson = {
  /**
   * Merchant customer identifier string
   * Must start with "cus-" prefix followed by additional characters
   * This identifier references an existing merchant customer in the system
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer?: string;

  /**
   * The charge details to be processed
   * Contains amount, currency, description, and other charge-specific information
   * Required to process the payment transaction
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialChargeJson;
};

/**
 * Describes the message api.v1.OffSessionPaymentRequest.
 * Use `create(OffSessionPaymentRequestSchema)` to create a new message.
 */
export const OffSessionPaymentRequestSchema: GenMessage<OffSessionPaymentRequest, OffSessionPaymentRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 0);

/**
 * # OffSessionPaymentResponse
 *
 * This message represents the response after processing an OffSessionPaymentRequest.
 * It contains information about the created charge, customer details
 * and the payment result.
 *
 * @generated from message api.v1.OffSessionPaymentResponse
 */
export type OffSessionPaymentResponse = Message<"api.v1.OffSessionPaymentResponse"> & {
  /**
   * Customer information associated with this charge
   * Contains customer details like name, email, metadata, etc.
   * This is returned for convenience and to confirm the charge association
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 1;
   */
  customer?: Customer;

  /**
   * Charge information for the newly created charge
   * Contains charge ID, status, amount, currency, timestamps, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.ChargeResult charge = 2;
   */
  charge?: ChargeResult;
};

/**
 * # OffSessionPaymentResponse
 *
 * This message represents the response after processing an OffSessionPaymentRequest.
 * It contains information about the created charge, customer details
 * and the payment result.
 *
 * @generated from message api.v1.OffSessionPaymentResponse
 */
export type OffSessionPaymentResponseJson = {
  /**
   * Customer information associated with this charge
   * Contains customer details like name, email, metadata, etc.
   * This is returned for convenience and to confirm the charge association
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 1;
   */
  customer?: CustomerJson;

  /**
   * Charge information for the newly created charge
   * Contains charge ID, status, amount, currency, timestamps, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.ChargeResult charge = 2;
   */
  charge?: ChargeResultJson;
};

/**
 * Describes the message api.v1.OffSessionPaymentResponse.
 * Use `create(OffSessionPaymentResponseSchema)` to create a new message.
 */
export const OffSessionPaymentResponseSchema: GenMessage<OffSessionPaymentResponse, OffSessionPaymentResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 1);

/**
 * # AddChargeRequest
 *
 * This message represents a request to add a charge to an existing customer.
 * It contains all necessary information to process a new payment transaction.
 *
 * @generated from message api.v1.AddChargeRequest
 */
export type AddChargeRequest = Message<"api.v1.AddChargeRequest"> & {
  /**
   * Merchant customer identifier string
   * Must start with "cus-" prefix followed by additional characters
   * This identifier references an existing merchant customer in the system
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * The charge details to be processed
   * Contains amount, currency, description, and other charge-specific information
   * Required to process the payment transaction
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialCharge;

  /**
   * Redirect URL to send the customer to after payment processing
   * This URL is used in the payment flow to redirect the customer
   * after they complete the payment process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URL;
};

/**
 * # AddChargeRequest
 *
 * This message represents a request to add a charge to an existing customer.
 * It contains all necessary information to process a new payment transaction.
 *
 * @generated from message api.v1.AddChargeRequest
 */
export type AddChargeRequestJson = {
  /**
   * Merchant customer identifier string
   * Must start with "cus-" prefix followed by additional characters
   * This identifier references an existing merchant customer in the system
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer?: string;

  /**
   * The charge details to be processed
   * Contains amount, currency, description, and other charge-specific information
   * Required to process the payment transaction
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialChargeJson;

  /**
   * Redirect URL to send the customer to after payment processing
   * This URL is used in the payment flow to redirect the customer
   * after they complete the payment process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URLJson;
};

/**
 * Describes the message api.v1.AddChargeRequest.
 * Use `create(AddChargeRequestSchema)` to create a new message.
 */
export const AddChargeRequestSchema: GenMessage<AddChargeRequest, AddChargeRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 2);

/**
 * # AddChargeResponse
 *
 * This message represents the response after processing an AddChargeRequest.
 * It contains information about the created charge, customer details, and
 * a payment link that can be used to complete the payment if needed.
 *
 * @generated from message api.v1.AddChargeResponse
 */
export type AddChargeResponse = Message<"api.v1.AddChargeResponse"> & {
  /**
   * Charge information for the newly created charge
   * Contains charge ID, status, amount, currency, timestamps, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Charge charge = 1;
   */
  charge?: Charge;

  /**
   * Customer information associated with this charge
   * Contains customer details like name, email, metadata, etc.
   * This is returned for convenience and to confirm the charge association
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: Customer;

  /**
   * Payment link information that can be used to complete the payment
   * For server-initiated charges that require customer action,
   * this link can be presented to the customer to complete the payment flow
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.PaymentLink payment_link = 3;
   */
  paymentLink?: PaymentLink;
};

/**
 * # AddChargeResponse
 *
 * This message represents the response after processing an AddChargeRequest.
 * It contains information about the created charge, customer details, and
 * a payment link that can be used to complete the payment if needed.
 *
 * @generated from message api.v1.AddChargeResponse
 */
export type AddChargeResponseJson = {
  /**
   * Charge information for the newly created charge
   * Contains charge ID, status, amount, currency, timestamps, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Charge charge = 1;
   */
  charge?: ChargeJson;

  /**
   * Customer information associated with this charge
   * Contains customer details like name, email, metadata, etc.
   * This is returned for convenience and to confirm the charge association
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: CustomerJson;

  /**
   * Payment link information that can be used to complete the payment
   * For server-initiated charges that require customer action,
   * this link can be presented to the customer to complete the payment flow
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.PaymentLink payment_link = 3;
   */
  paymentLink?: PaymentLinkJson;
};

/**
 * Describes the message api.v1.AddChargeResponse.
 * Use `create(AddChargeResponseSchema)` to create a new message.
 */
export const AddChargeResponseSchema: GenMessage<AddChargeResponse, AddChargeResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 3);

/**
 * @generated from message api.v1.GetChargesRequest
 */
export type GetChargesRequest = Message<"api.v1.GetChargesRequest"> & {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * @generated from field: optional api.v1.Pagination pagination = 2;
   */
  pagination?: Pagination;
};

/**
 * @generated from message api.v1.GetChargesRequest
 */
export type GetChargesRequestJson = {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer?: string;

  /**
   * @generated from field: optional api.v1.Pagination pagination = 2;
   */
  pagination?: PaginationJson;
};

/**
 * Describes the message api.v1.GetChargesRequest.
 * Use `create(GetChargesRequestSchema)` to create a new message.
 */
export const GetChargesRequestSchema: GenMessage<GetChargesRequest, GetChargesRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 4);

/**
 * @generated from message api.v1.GetChargesResponse
 */
export type GetChargesResponse = Message<"api.v1.GetChargesResponse"> & {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: repeated api.v1.ChargeResult charges = 1;
   */
  charges: ChargeResult[];

  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: Customer;

  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Pagination pagination = 3;
   */
  pagination?: Pagination;
};

/**
 * @generated from message api.v1.GetChargesResponse
 */
export type GetChargesResponseJson = {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: repeated api.v1.ChargeResult charges = 1;
   */
  charges?: ChargeResultJson[];

  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: CustomerJson;

  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Pagination pagination = 3;
   */
  pagination?: PaginationJson;
};

/**
 * Describes the message api.v1.GetChargesResponse.
 * Use `create(GetChargesResponseSchema)` to create a new message.
 */
export const GetChargesResponseSchema: GenMessage<GetChargesResponse, GetChargesResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 5);

/**
 * @generated from message api.v1.GetChargeRequest
 */
export type GetChargeRequest = Message<"api.v1.GetChargeRequest"> & {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: string charge = 2;
   */
  charge: string;
};

/**
 * @generated from message api.v1.GetChargeRequest
 */
export type GetChargeRequestJson = {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: string charge = 2;
   */
  charge?: string;
};

/**
 * Describes the message api.v1.GetChargeRequest.
 * Use `create(GetChargeRequestSchema)` to create a new message.
 */
export const GetChargeRequestSchema: GenMessage<GetChargeRequest, GetChargeRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 6);

/**
 * @generated from message api.v1.GetChargeResponse
 */
export type GetChargeResponse = Message<"api.v1.GetChargeResponse"> & {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.ChargeResult charge = 1;
   */
  charge?: ChargeResult;

  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: Customer;
};

/**
 * @generated from message api.v1.GetChargeResponse
 */
export type GetChargeResponseJson = {
  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.ChargeResult charge = 1;
   */
  charge?: ChargeResultJson;

  /**
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: CustomerJson;
};

/**
 * Describes the message api.v1.GetChargeResponse.
 * Use `create(GetChargeResponseSchema)` to create a new message.
 */
export const GetChargeResponseSchema: GenMessage<GetChargeResponse, GetChargeResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 7);

/**
 * WithdrawRequest
 *
 * This message represents a request to withdraw money from a customer.
 * It contains the customer ID and the amount to withdraw.
 *
 * @generated from message api.v1.WithdrawRequest
 */
export type WithdrawRequest = Message<"api.v1.WithdrawRequest"> & {
  /**
   * Merchant customer identifier string
   * Must start with "cus-" prefix followed by additional characters
   * This identifier references an existing merchant customer in the system
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * The amount to withdraw
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialCharge;
};

/**
 * WithdrawRequest
 *
 * This message represents a request to withdraw money from a customer.
 * It contains the customer ID and the amount to withdraw.
 *
 * @generated from message api.v1.WithdrawRequest
 */
export type WithdrawRequestJson = {
  /**
   * Merchant customer identifier string
   * Must start with "cus-" prefix followed by additional characters
   * This identifier references an existing merchant customer in the system
   * @gotags: validate:"required"
   *
   * @generated from field: string customer = 1;
   */
  customer?: string;

  /**
   * The amount to withdraw
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialChargeJson;
};

/**
 * Describes the message api.v1.WithdrawRequest.
 * Use `create(WithdrawRequestSchema)` to create a new message.
 */
export const WithdrawRequestSchema: GenMessage<WithdrawRequest, WithdrawRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 8);

/**
 * WithdrawResponse
 *
 * This message represents the response after processing a WithdrawRequest.
 * It contains information about the customer and the charge.
 *
 * @generated from message api.v1.WithdrawResponse
 */
export type WithdrawResponse = Message<"api.v1.WithdrawResponse"> & {
  /**
   * The customer information
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 1;
   */
  customer?: Customer;

  /**
   * The charge information
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.ChargeResult charge = 2;
   */
  charge?: ChargeResult;
};

/**
 * WithdrawResponse
 *
 * This message represents the response after processing a WithdrawRequest.
 * It contains information about the customer and the charge.
 *
 * @generated from message api.v1.WithdrawResponse
 */
export type WithdrawResponseJson = {
  /**
   * The customer information
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 1;
   */
  customer?: CustomerJson;

  /**
   * The charge information
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.ChargeResult charge = 2;
   */
  charge?: ChargeResultJson;
};

/**
 * Describes the message api.v1.WithdrawResponse.
 * Use `create(WithdrawResponseSchema)` to create a new message.
 */
export const WithdrawResponseSchema: GenMessage<WithdrawResponse, WithdrawResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 9);

/**
 * # CreateContractWithoutChargeRequest
 *
 * Request message for creating a new contract without an initial charge.
 * This is typically used when setting up a billing relationship before
 * any actual charges are processed.
 *
 * @generated from message api.v1.CreateContractWithoutChargeRequest
 */
export type CreateContractWithoutChargeRequest = Message<"api.v1.CreateContractWithoutChargeRequest"> & {
  /**
   * Buyer information for the new contract
   * Contains details about the entity entering into the contract
   * including name, contact information, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Buyer buyer = 1;
   */
  buyer?: Buyer;

  /**
   * Redirect URL to send the customer after contract creation
   * This URL is used in the checkout flow to redirect the customer
   * after they complete the contract creation process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URL;
};

/**
 * # CreateContractWithoutChargeRequest
 *
 * Request message for creating a new contract without an initial charge.
 * This is typically used when setting up a billing relationship before
 * any actual charges are processed.
 *
 * @generated from message api.v1.CreateContractWithoutChargeRequest
 */
export type CreateContractWithoutChargeRequestJson = {
  /**
   * Buyer information for the new contract
   * Contains details about the entity entering into the contract
   * including name, contact information, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Buyer buyer = 1;
   */
  buyer?: BuyerJson;

  /**
   * Redirect URL to send the customer after contract creation
   * This URL is used in the checkout flow to redirect the customer
   * after they complete the contract creation process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URLJson;
};

/**
 * Describes the message api.v1.CreateContractWithoutChargeRequest.
 * Use `create(CreateContractWithoutChargeRequestSchema)` to create a new message.
 */
export const CreateContractWithoutChargeRequestSchema: GenMessage<CreateContractWithoutChargeRequest, CreateContractWithoutChargeRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 10);

/**
 * # CreateContractWithoutChargeResponse
 *
 * Response message after successfully creating a contract without a charge.
 * Contains all the information needed for subsequent interactions with
 * the contract and customer.
 *
 * @generated from message api.v1.CreateContractWithoutChargeResponse
 */
export type CreateContractWithoutChargeResponse = Message<"api.v1.CreateContractWithoutChargeResponse"> & {
  /**
   * The newly created contract
   * Contains contract ID, status, creation timestamp, etc.
   * This is the primary object created by this operation
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Contract contract = 1;
   */
  contract?: Contract;

  /**
   * Customer information associated with this contract
   * Contains customer details that were created or associated
   * during the contract creation process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: Customer;

  /**
   * Payment link information related to this contract
   * Even though no charge is created initially, this link provides
   * access to manage the contract
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.PaymentLink payment_link = 3;
   */
  paymentLink?: PaymentLink;
};

/**
 * # CreateContractWithoutChargeResponse
 *
 * Response message after successfully creating a contract without a charge.
 * Contains all the information needed for subsequent interactions with
 * the contract and customer.
 *
 * @generated from message api.v1.CreateContractWithoutChargeResponse
 */
export type CreateContractWithoutChargeResponseJson = {
  /**
   * The newly created contract
   * Contains contract ID, status, creation timestamp, etc.
   * This is the primary object created by this operation
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Contract contract = 1;
   */
  contract?: ContractJson;

  /**
   * Customer information associated with this contract
   * Contains customer details that were created or associated
   * during the contract creation process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 2;
   */
  customer?: CustomerJson;

  /**
   * Payment link information related to this contract
   * Even though no charge is created initially, this link provides
   * access to manage the contract
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.PaymentLink payment_link = 3;
   */
  paymentLink?: PaymentLinkJson;
};

/**
 * Describes the message api.v1.CreateContractWithoutChargeResponse.
 * Use `create(CreateContractWithoutChargeResponseSchema)` to create a new message.
 */
export const CreateContractWithoutChargeResponseSchema: GenMessage<CreateContractWithoutChargeResponse, CreateContractWithoutChargeResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 11);

/**
 * # CreateContractWithChargeRequest
 *
 * Request message for creating a new contract with an immediate initial charge.
 * This combines contract creation and charging in a single operation.
 *
 * @generated from message api.v1.CreateContractWithChargeRequest
 */
export type CreateContractWithChargeRequest = Message<"api.v1.CreateContractWithChargeRequest"> & {
  /**
   * Buyer information for the new contract
   * Contains details about the entity entering into the contract
   * including name, contact information, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Buyer buyer = 1;
   */
  buyer?: Buyer;

  /**
   * Initial charge details to be processed immediately with contract creation
   * Contains amount, currency, description, and other charge-specific information
   * This charge will be processed after the contract creation
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialCharge;

  /**
   * Redirect URL to send the customer after contract creation and charge processing
   * This URL is used in the checkout flow to redirect the customer
   * after they complete the payment process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URL;
};

/**
 * # CreateContractWithChargeRequest
 *
 * Request message for creating a new contract with an immediate initial charge.
 * This combines contract creation and charging in a single operation.
 *
 * @generated from message api.v1.CreateContractWithChargeRequest
 */
export type CreateContractWithChargeRequestJson = {
  /**
   * Buyer information for the new contract
   * Contains details about the entity entering into the contract
   * including name, contact information, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Buyer buyer = 1;
   */
  buyer?: BuyerJson;

  /**
   * Initial charge details to be processed immediately with contract creation
   * Contains amount, currency, description, and other charge-specific information
   * This charge will be processed after the contract creation
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.InitialCharge charge = 2;
   */
  charge?: InitialChargeJson;

  /**
   * Redirect URL to send the customer after contract creation and charge processing
   * This URL is used in the checkout flow to redirect the customer
   * after they complete the payment process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URLJson;
};

/**
 * Describes the message api.v1.CreateContractWithChargeRequest.
 * Use `create(CreateContractWithChargeRequestSchema)` to create a new message.
 */
export const CreateContractWithChargeRequestSchema: GenMessage<CreateContractWithChargeRequest, CreateContractWithChargeRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 12);

/**
 * # CreateContractWithChargeResponse
 *
 * Response message after successfully creating a contract with an initial charge.
 * Contains all information about the created contract, charge, customer,
 * and payment link for further interactions.
 *
 * @generated from message api.v1.CreateContractWithChargeResponse
 */
export type CreateContractWithChargeResponse = Message<"api.v1.CreateContractWithChargeResponse"> & {
  /**
   * The newly created contract
   * Contains contract ID, status, creation timestamp, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Contract contract = 1;
   */
  contract?: Contract;

  /**
   * The charge information for the initial charge
   * Contains charge ID, status, amount, currency, timestamps, etc.
   * This represents the payment transaction created with the contract
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Charge charge = 2;
   */
  charge?: Charge;

  /**
   * Customer information associated with this contract and charge
   * Contains customer details that were created or associated
   * during the contract creation process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 3;
   */
  customer?: Customer;

  /**
   * Payment link information related to this contract and charge
   * Provides access to manage the contract, view charge status,
   * and complete payment
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: api.v1.PaymentLink payment_link = 4;
   */
  paymentLink?: PaymentLink;
};

/**
 * # CreateContractWithChargeResponse
 *
 * Response message after successfully creating a contract with an initial charge.
 * Contains all information about the created contract, charge, customer,
 * and payment link for further interactions.
 *
 * @generated from message api.v1.CreateContractWithChargeResponse
 */
export type CreateContractWithChargeResponseJson = {
  /**
   * The newly created contract
   * Contains contract ID, status, creation timestamp, etc.
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Contract contract = 1;
   */
  contract?: ContractJson;

  /**
   * The charge information for the initial charge
   * Contains charge ID, status, amount, currency, timestamps, etc.
   * This represents the payment transaction created with the contract
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Charge charge = 2;
   */
  charge?: ChargeJson;

  /**
   * Customer information associated with this contract and charge
   * Contains customer details that were created or associated
   * during the contract creation process
   * @gotags: validate:"required"
   *
   * @generated from field: api.v1.Customer customer = 3;
   */
  customer?: CustomerJson;

  /**
   * Payment link information related to this contract and charge
   * Provides access to manage the contract, view charge status,
   * and complete payment
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: api.v1.PaymentLink payment_link = 4;
   */
  paymentLink?: PaymentLinkJson;
};

/**
 * Describes the message api.v1.CreateContractWithChargeResponse.
 * Use `create(CreateContractWithChargeResponseSchema)` to create a new message.
 */
export const CreateContractWithChargeResponseSchema: GenMessage<CreateContractWithChargeResponse, CreateContractWithChargeResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 13);

/**
 * @generated from message api.v1.URL
 */
export type URL = Message<"api.v1.URL"> & {
  /**
   * URL to redirect the customer from Jamm to shop after payment is successful.
   *
   * 決済が成功した場合に、顧客をJammからショップへリダイレクトするURLです。
   *
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: string success_url = 1;
   */
  successUrl: string;

  /**
   * URL to redirect the customer from Jamm to shop after payment is failed.
   *
   * 決済が失敗した場合に、顧客をJammからショップへリダイレクトするURLです。
   *
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: string failure_url = 2;
   */
  failureUrl: string;
};

/**
 * @generated from message api.v1.URL
 */
export type URLJson = {
  /**
   * URL to redirect the customer from Jamm to shop after payment is successful.
   *
   * 決済が成功した場合に、顧客をJammからショップへリダイレクトするURLです。
   *
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: string success_url = 1;
   */
  successUrl?: string;

  /**
   * URL to redirect the customer from Jamm to shop after payment is failed.
   *
   * 決済が失敗した場合に、顧客をJammからショップへリダイレクトするURLです。
   *
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: string failure_url = 2;
   */
  failureUrl?: string;
};

/**
 * Describes the message api.v1.URL.
 * Use `create(URLSchema)` to create a new message.
 */
export const URLSchema: GenMessage<URL, URLJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 14);

/**
 * # InitialCharge
 *
 * InitialCharge is a charge object without id.
 * Intended to be used when creating a contract with initial charge.
 *
 * @generated from message api.v1.InitialCharge
 */
export type InitialCharge = Message<"api.v1.InitialCharge"> & {
  /**
   * Amount of the charge in Japanese Yen.
   * The amount must be the total price of the product/service including tax.
   *
   * 決済金額。日本円で指定してください。
   * 金額は商品/サービスの合計金額 (税込) を指定してください。
   *
   * @gotags: validate:"gte=1,lte=500000"
   *
   * @generated from field: int32 price = 2;
   */
  price: number;

  /**
   * Description is an arbitrary string for merchant to track the charge.
   * This information is displayed on Merchant Dashboard.
   *
   * 決済の説明。ショップが決済を追跡するための任意の文字列です。
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Arbitrary key-value additional information about the charge.
   * You can see this information in our merchant dashboard.
   *
   * Chargeに関する任意のキーと値の追加情報。
   * 加盟店ダッシュボードで確認できます。
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };

  /**
   * Merchant can optionally set the expiry date for the payment.
   * Defaults to 90 minutes if not specified.
   *
   * 決済の有効期限。未指定の場合は90分後に自動失効します。
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 20;
   */
  expiresAt?: Timestamp;
};

/**
 * # InitialCharge
 *
 * InitialCharge is a charge object without id.
 * Intended to be used when creating a contract with initial charge.
 *
 * @generated from message api.v1.InitialCharge
 */
export type InitialChargeJson = {
  /**
   * Amount of the charge in Japanese Yen.
   * The amount must be the total price of the product/service including tax.
   *
   * 決済金額。日本円で指定してください。
   * 金額は商品/サービスの合計金額 (税込) を指定してください。
   *
   * @gotags: validate:"gte=1,lte=500000"
   *
   * @generated from field: int32 price = 2;
   */
  price?: number;

  /**
   * Description is an arbitrary string for merchant to track the charge.
   * This information is displayed on Merchant Dashboard.
   *
   * 決済の説明。ショップが決済を追跡するための任意の文字列です。
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string description = 3;
   */
  description?: string;

  /**
   * Arbitrary key-value additional information about the charge.
   * You can see this information in our merchant dashboard.
   *
   * Chargeに関する任意のキーと値の追加情報。
   * 加盟店ダッシュボードで確認できます。
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata?: { [key: string]: string };

  /**
   * Merchant can optionally set the expiry date for the payment.
   * Defaults to 90 minutes if not specified.
   *
   * 決済の有効期限。未指定の場合は90分後に自動失効します。
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 20;
   */
  expiresAt?: TimestampJson;
};

/**
 * Describes the message api.v1.InitialCharge.
 * Use `create(InitialChargeSchema)` to create a new message.
 */
export const InitialChargeSchema: GenMessage<InitialCharge, InitialChargeJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 15);

/**
 * # Charge
 *
 * Charge represents a charge information for the customer.
 *
 * @generated from message api.v1.Charge
 */
export type Charge = Message<"api.v1.Charge"> & {
  /**
   * Charge ID (e.g. trx-1234567890)
   *
   * 決済ID (例: trx-1234567890)
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Amount of the charge in Japanese Yen.
   * The amount must be the total price of the product/service including tax.
   *
   * 決済金額。日本円で指定してください。
   * 金額は商品/サービスの合計金額 (税込) を指定してください。
   *
   * @gotags: validate:"gte=1,lte=500000"
   *
   * @generated from field: int32 price = 2;
   */
  price: number;

  /**
   * Description is an arbitrary string for merchant to track the charge.
   * This information is displayed on Merchant Dashboard.
   *
   * 決済の説明。ショップが決済を追跡するための任意の文字列です。
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Arbitrary key-value additional information about the charge.
   * You can see this information in our merchant dashboard.
   *
   * Chargeに関する任意のキーと値の追加情報。
   * 加盟店ダッシュボードで確認できます。
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata: { [key: string]: string };

  /**
   * Merchant can optionally set the expiry date for the payment.
   * Defaults to 90 minutes if not specified.
   *
   * 決済の有効期限。未指定の場合は90分後に自動失効します。
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 20;
   */
  expiresAt?: Timestamp;
};

/**
 * # Charge
 *
 * Charge represents a charge information for the customer.
 *
 * @generated from message api.v1.Charge
 */
export type ChargeJson = {
  /**
   * Charge ID (e.g. trx-1234567890)
   *
   * 決済ID (例: trx-1234567890)
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * Amount of the charge in Japanese Yen.
   * The amount must be the total price of the product/service including tax.
   *
   * 決済金額。日本円で指定してください。
   * 金額は商品/サービスの合計金額 (税込) を指定してください。
   *
   * @gotags: validate:"gte=1,lte=500000"
   *
   * @generated from field: int32 price = 2;
   */
  price?: number;

  /**
   * Description is an arbitrary string for merchant to track the charge.
   * This information is displayed on Merchant Dashboard.
   *
   * 決済の説明。ショップが決済を追跡するための任意の文字列です。
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string description = 3;
   */
  description?: string;

  /**
   * Arbitrary key-value additional information about the charge.
   * You can see this information in our merchant dashboard.
   *
   * Chargeに関する任意のキーと値の追加情報。
   * 加盟店ダッシュボードで確認できます。
   *
   * @generated from field: map<string, string> metadata = 4;
   */
  metadata?: { [key: string]: string };

  /**
   * Merchant can optionally set the expiry date for the payment.
   * Defaults to 90 minutes if not specified.
   *
   * 決済の有効期限。未指定の場合は90分後に自動失効します。
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 20;
   */
  expiresAt?: TimestampJson;
};

/**
 * Describes the message api.v1.Charge.
 * Use `create(ChargeSchema)` to create a new message.
 */
export const ChargeSchema: GenMessage<Charge, ChargeJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 16);

/**
 * # ChargeResult
 *
 * Contains the result of a charge operation.
 *
 * @generated from message api.v1.ChargeResult
 */
export type ChargeResult = Message<"api.v1.ChargeResult"> & {
  /**
   * @generated from field: string charge_id = 1;
   */
  chargeId: string;

  /**
   * True when charged.
   *
   * @generated from field: bool paid = 2;
   */
  paid: boolean;

  /**
   * Reason contains enum status in string.
   * Merchant should not write any code depending on the
   * reason, because Jamm may update the reason at any time.
   *
   * @generated from field: string reason = 3;
   */
  reason: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string merchant_name = 5;
   */
  merchantName: string;

  /**
   * @generated from field: int32 initial_amount = 6;
   */
  initialAmount: number;

  /**
   * @generated from field: int32 discount = 7;
   */
  discount: number;

  /**
   * @generated from field: int32 final_amount = 8;
   */
  finalAmount: number;

  /**
   * @generated from field: optional int32 amount_refunded = 9;
   */
  amountRefunded?: number;

  /**
   * @generated from field: string currency = 10;
   */
  currency: string;

  /**
   * @generated from field: string token_id = 11;
   */
  tokenId: string;

  /**
   * @generated from field: map<string, string> metadata = 12;
   */
  metadata: { [key: string]: string };

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 13;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 14;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp processed_at = 15;
   */
  processedAt?: Timestamp;
};

/**
 * # ChargeResult
 *
 * Contains the result of a charge operation.
 *
 * @generated from message api.v1.ChargeResult
 */
export type ChargeResultJson = {
  /**
   * @generated from field: string charge_id = 1;
   */
  chargeId?: string;

  /**
   * True when charged.
   *
   * @generated from field: bool paid = 2;
   */
  paid?: boolean;

  /**
   * Reason contains enum status in string.
   * Merchant should not write any code depending on the
   * reason, because Jamm may update the reason at any time.
   *
   * @generated from field: string reason = 3;
   */
  reason?: string;

  /**
   * @generated from field: string description = 4;
   */
  description?: string;

  /**
   * @generated from field: string merchant_name = 5;
   */
  merchantName?: string;

  /**
   * @generated from field: int32 initial_amount = 6;
   */
  initialAmount?: number;

  /**
   * @generated from field: int32 discount = 7;
   */
  discount?: number;

  /**
   * @generated from field: int32 final_amount = 8;
   */
  finalAmount?: number;

  /**
   * @generated from field: optional int32 amount_refunded = 9;
   */
  amountRefunded?: number;

  /**
   * @generated from field: string currency = 10;
   */
  currency?: string;

  /**
   * @generated from field: string token_id = 11;
   */
  tokenId?: string;

  /**
   * @generated from field: map<string, string> metadata = 12;
   */
  metadata?: { [key: string]: string };

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 13;
   */
  createdAt?: TimestampJson;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 14;
   */
  updatedAt?: TimestampJson;

  /**
   * @generated from field: optional google.protobuf.Timestamp processed_at = 15;
   */
  processedAt?: TimestampJson;
};

/**
 * Describes the message api.v1.ChargeResult.
 * Use `create(ChargeResultSchema)` to create a new message.
 */
export const ChargeResultSchema: GenMessage<ChargeResult, ChargeResultJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 17);

/**
 * # PaymentLink
 *
 * PaymentLink contains a URL for merchant to navigate customer to Jamm payment page
 * to complete the payment.
 *
 * @generated from message api.v1.PaymentLink
 */
export type PaymentLink = Message<"api.v1.PaymentLink"> & {
  /**
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * Expiration time of the payment url.
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 11;
   */
  expiresAt?: Timestamp;
};

/**
 * # PaymentLink
 *
 * PaymentLink contains a URL for merchant to navigate customer to Jamm payment page
 * to complete the payment.
 *
 * @generated from message api.v1.PaymentLink
 */
export type PaymentLinkJson = {
  /**
   * @gotags: validate:"required,http_url"
   *
   * @generated from field: string url = 1;
   */
  url?: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: TimestampJson;

  /**
   * Expiration time of the payment url.
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 11;
   */
  expiresAt?: TimestampJson;
};

/**
 * Describes the message api.v1.PaymentLink.
 * Use `create(PaymentLinkSchema)` to create a new message.
 */
export const PaymentLinkSchema: GenMessage<PaymentLink, PaymentLinkJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 18);

/**
 * # OnSessionPaymentRequest
 *
 * Request message for the unified payment interface. The system intelligently routes
 * the request to the appropriate payment method based on the provided parameters.
 *
 * @generated from message api.v1.OnSessionPaymentRequest
 */
export type OnSessionPaymentRequest = Message<"api.v1.OnSessionPaymentRequest"> & {
  /**
   * Optional customer ID for existing customers
   * If provided, the system will use the AddCharge flow and ignore buyer information
   * Must start with "cus-" prefix followed by additional characters
   *
   * @generated from field: optional string customer = 1;
   */
  customer?: string;

  /**
   * Optional buyer information for new customers
   * If provided without a customer ID, the system will create a new customer and contract
   *
   * @generated from field: optional api.v1.Buyer buyer = 2;
   */
  buyer?: Buyer;

  /**
   * Optional charge information
   * If provided with customer ID: adds charge to existing customer
   * If provided with buyer info: creates contract with charge for new customer
   * If not provided with buyer info: creates contract without charge
   *
   * @generated from field: optional api.v1.InitialCharge charge = 3;
   */
  charge?: InitialCharge;

  /**
   * Required redirect URLs for payment completion
   * Used in all payment flows to direct the customer after payment processing
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URL;
};

/**
 * # OnSessionPaymentRequest
 *
 * Request message for the unified payment interface. The system intelligently routes
 * the request to the appropriate payment method based on the provided parameters.
 *
 * @generated from message api.v1.OnSessionPaymentRequest
 */
export type OnSessionPaymentRequestJson = {
  /**
   * Optional customer ID for existing customers
   * If provided, the system will use the AddCharge flow and ignore buyer information
   * Must start with "cus-" prefix followed by additional characters
   *
   * @generated from field: optional string customer = 1;
   */
  customer?: string;

  /**
   * Optional buyer information for new customers
   * If provided without a customer ID, the system will create a new customer and contract
   *
   * @generated from field: optional api.v1.Buyer buyer = 2;
   */
  buyer?: BuyerJson;

  /**
   * Optional charge information
   * If provided with customer ID: adds charge to existing customer
   * If provided with buyer info: creates contract with charge for new customer
   * If not provided with buyer info: creates contract without charge
   *
   * @generated from field: optional api.v1.InitialCharge charge = 3;
   */
  charge?: InitialChargeJson;

  /**
   * Required redirect URLs for payment completion
   * Used in all payment flows to direct the customer after payment processing
   *
   * @generated from field: api.v1.URL redirect = 10;
   */
  redirect?: URLJson;
};

/**
 * Describes the message api.v1.OnSessionPaymentRequest.
 * Use `create(OnSessionPaymentRequestSchema)` to create a new message.
 */
export const OnSessionPaymentRequestSchema: GenMessage<OnSessionPaymentRequest, OnSessionPaymentRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 19);

/**
 * Error message structure for OnSessionPayment API
 *
 * @generated from message api.v1.OnSessionPaymentError
 */
export type OnSessionPaymentError = Message<"api.v1.OnSessionPaymentError"> & {
  /**
   * Error code from OnSessionPaymentErrorCode enum
   *
   * @generated from field: api.v1.OnSessionPaymentErrorCode code = 1;
   */
  code: OnSessionPaymentErrorCode;

  /**
   * Human-readable error message
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Error message structure for OnSessionPayment API
 *
 * @generated from message api.v1.OnSessionPaymentError
 */
export type OnSessionPaymentErrorJson = {
  /**
   * Error code from OnSessionPaymentErrorCode enum
   *
   * @generated from field: api.v1.OnSessionPaymentErrorCode code = 1;
   */
  code?: OnSessionPaymentErrorCodeJson;

  /**
   * Human-readable error message
   *
   * @generated from field: string message = 2;
   */
  message?: string;
};

/**
 * Describes the message api.v1.OnSessionPaymentError.
 * Use `create(OnSessionPaymentErrorSchema)` to create a new message.
 */
export const OnSessionPaymentErrorSchema: GenMessage<OnSessionPaymentError, OnSessionPaymentErrorJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 20);

/**
 * Success data structure for OnSessionPayment API
 *
 * @generated from message api.v1.OnSessionPaymentData
 */
export type OnSessionPaymentData = Message<"api.v1.OnSessionPaymentData"> & {
  /**
   * Contract information
   * Included for CreateContractWithCharge and CreateContractWithoutCharge flows
   * Not included for AddCharge flow
   *
   * @generated from field: optional api.v1.Contract contract = 1;
   */
  contract?: Contract;

  /**
   * Charge information
   * Included for AddCharge and CreateContractWithCharge flows
   * Not included for CreateContractWithoutCharge flow
   *
   * @generated from field: optional api.v1.Charge charge = 2;
   */
  charge?: Charge;

  /**
   * Customer information
   * Included in all flows
   *
   * @generated from field: api.v1.Customer customer = 3;
   */
  customer?: Customer;

  /**
   * Payment link information
   * Included in all flows
   * Contains the URL to redirect the customer to for payment completion
   *
   * @generated from field: api.v1.PaymentLink payment_link = 4;
   */
  paymentLink?: PaymentLink;
};

/**
 * Success data structure for OnSessionPayment API
 *
 * @generated from message api.v1.OnSessionPaymentData
 */
export type OnSessionPaymentDataJson = {
  /**
   * Contract information
   * Included for CreateContractWithCharge and CreateContractWithoutCharge flows
   * Not included for AddCharge flow
   *
   * @generated from field: optional api.v1.Contract contract = 1;
   */
  contract?: ContractJson;

  /**
   * Charge information
   * Included for AddCharge and CreateContractWithCharge flows
   * Not included for CreateContractWithoutCharge flow
   *
   * @generated from field: optional api.v1.Charge charge = 2;
   */
  charge?: ChargeJson;

  /**
   * Customer information
   * Included in all flows
   *
   * @generated from field: api.v1.Customer customer = 3;
   */
  customer?: CustomerJson;

  /**
   * Payment link information
   * Included in all flows
   * Contains the URL to redirect the customer to for payment completion
   *
   * @generated from field: api.v1.PaymentLink payment_link = 4;
   */
  paymentLink?: PaymentLinkJson;
};

/**
 * Describes the message api.v1.OnSessionPaymentData.
 * Use `create(OnSessionPaymentDataSchema)` to create a new message.
 */
export const OnSessionPaymentDataSchema: GenMessage<OnSessionPaymentData, OnSessionPaymentDataJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 21);

/**
 * # OnSessionPaymentResponse
 *
 * Response message for the unified payment interface. Contains a standardized format
 * with success/error pattern for consistent API responses.
 *
 * @generated from message api.v1.OnSessionPaymentResponse
 */
export type OnSessionPaymentResponse = Message<"api.v1.OnSessionPaymentResponse"> & {
  /**
   * Indicates whether the operation was successful
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * Error information when success is false
   * Only present when an error occurs
   *
   * @generated from field: optional api.v1.OnSessionPaymentError error = 2;
   */
  error?: OnSessionPaymentError;

  /**
   * Success data when operation is successful
   * Only present when success is true
   *
   * @generated from field: optional api.v1.OnSessionPaymentData data = 3;
   */
  data?: OnSessionPaymentData;
};

/**
 * # OnSessionPaymentResponse
 *
 * Response message for the unified payment interface. Contains a standardized format
 * with success/error pattern for consistent API responses.
 *
 * @generated from message api.v1.OnSessionPaymentResponse
 */
export type OnSessionPaymentResponseJson = {
  /**
   * Indicates whether the operation was successful
   *
   * @generated from field: bool success = 1;
   */
  success?: boolean;

  /**
   * Error information when success is false
   * Only present when an error occurs
   *
   * @generated from field: optional api.v1.OnSessionPaymentError error = 2;
   */
  error?: OnSessionPaymentErrorJson;

  /**
   * Success data when operation is successful
   * Only present when success is true
   *
   * @generated from field: optional api.v1.OnSessionPaymentData data = 3;
   */
  data?: OnSessionPaymentDataJson;
};

/**
 * Describes the message api.v1.OnSessionPaymentResponse.
 * Use `create(OnSessionPaymentResponseSchema)` to create a new message.
 */
export const OnSessionPaymentResponseSchema: GenMessage<OnSessionPaymentResponse, OnSessionPaymentResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_payment, 22);

/**
 * @generated from enum api.v1.OnSessionPaymentErrorCode
 */
export enum OnSessionPaymentErrorCode {
  /**
   * Represents an unspecified or unknown error condition
   * This is the default value and should not be explicitly used
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Missing redirect URLs in the payment request
   * Occurs when either success_url or failure_url is not provided
   * All payment flows require both redirect URLs to be specified
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_MISSING_REDIRECT_URLS = 1;
   */
  MISSING_REDIRECT_URLS = 1,

  /**
   * Missing required core parameters to determine payment flow
   * Occurs when neither customer ID nor buyer information is provided
   * Request must include at least one of these to determine the payment strategy
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_MISSING_REQUIRED_PARAMETERS = 2;
   */
  MISSING_REQUIRED_PARAMETERS = 2,

  /**
   * Missing charge information when using existing merchant customer
   * Occurs when merchant customer ID is provided but charge details are missing
   * AddCharge flow requires charge information to proceed
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_MISSING_CHARGE = 10;
   */
  MISSING_CHARGE = 10,

  /**
   * Customer identifier not found in the system
   * Occurs when the provided merchant customer ID doesn't match any existing merchant customer
   * The merchant customer must exist before charges can be added
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_CUSTOMER_NOT_FOUND = 11;
   */
  CUSTOMER_NOT_FOUND = 11,

  /**
   * Customer exists but is not activated for charges
   * Occurs when the merchant customer record exists but has not completed necessary
   * setup steps or has been deactivated for charging
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_CUSTOMER_INACTIVE = 12;
   */
  CUSTOMER_INACTIVE = 12,

  /**
   * An active customer already exists with the provided email
   * Occurs when attempting to create a new customer (via buyer info)
   * but a customer with the same email already exists for this merchant
   * Use the existing merchant customer ID instead of creating a new one
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_MERCHANT_CUSTOMER_ALREADY_EXISTS = 20;
   */
  MERCHANT_CUSTOMER_ALREADY_EXISTS = 20,

  /**
   * Input validation error
   * Occurs when request passes protocol buffer validation but fails
   * business rules validation through the validator package
   * Examples include invalid value ranges, format requirements beyond
   * what protobuf can validate, or cross-field validation rules
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_VALIDATION_FAILED = 30;
   */
  VALIDATION_FAILED = 30,

  /**
   * Strategy execution failure
   * Occurs when the selected strategy fails during execution
   * This could be due to payment provider errors, database errors,
   * network issues, or other technical problems in processing the payment
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_STRATEGY_EXECUTION_FAILED = 40;
   */
  STRATEGY_EXECUTION_FAILED = 40,

  /**
   * Invalid payment strategy
   * Occurs when the system cannot determine a valid payment strategy
   * or when an unsupported strategy is attempted
   * This is typically an internal error that should be reported
   *
   * @generated from enum value: ON_SESSION_PAYMENT_ERROR_CODE_INVALID_PAYMENT_STRATEGY = 41;
   */
  INVALID_PAYMENT_STRATEGY = 41,
}

/**
 * @generated from enum api.v1.OnSessionPaymentErrorCode
 */
export type OnSessionPaymentErrorCodeJson = "ON_SESSION_PAYMENT_ERROR_CODE_UNSPECIFIED" | "ON_SESSION_PAYMENT_ERROR_CODE_MISSING_REDIRECT_URLS" | "ON_SESSION_PAYMENT_ERROR_CODE_MISSING_REQUIRED_PARAMETERS" | "ON_SESSION_PAYMENT_ERROR_CODE_MISSING_CHARGE" | "ON_SESSION_PAYMENT_ERROR_CODE_CUSTOMER_NOT_FOUND" | "ON_SESSION_PAYMENT_ERROR_CODE_CUSTOMER_INACTIVE" | "ON_SESSION_PAYMENT_ERROR_CODE_MERCHANT_CUSTOMER_ALREADY_EXISTS" | "ON_SESSION_PAYMENT_ERROR_CODE_VALIDATION_FAILED" | "ON_SESSION_PAYMENT_ERROR_CODE_STRATEGY_EXECUTION_FAILED" | "ON_SESSION_PAYMENT_ERROR_CODE_INVALID_PAYMENT_STRATEGY";

/**
 * Describes the enum api.v1.OnSessionPaymentErrorCode.
 */
export const OnSessionPaymentErrorCodeSchema: GenEnum<OnSessionPaymentErrorCode, OnSessionPaymentErrorCodeJson> = /*@__PURE__*/
  enumDesc(file_api_v1_payment, 0);

/**
 * # Payment Service
 *
 * This service provides functionality for managing contracts and charges.
 * It allows for creating contracts both with and without initial charges,
 * as well as adding charges to existing contracts.
 *
 * @generated from service api.v1.PaymentService
 */
export const PaymentService: GenService<{
  /**
   * ## CreateContractWithoutCharge
   *
   * Creates a new contract without an initial charge. This is useful when you want to
   * establish a billing relationship with a customer but don't need to charge them immediately.
   *
   * The contract can later be used with AddCharge to apply charges as needed.
   *
   * **Parameters:**
   * - CreateContractWithoutChargeRequest: Contains buyer information and redirect details
   *
   * **Returns:**
   * - CreateContractWithoutChargeResponse: Contains the created payment link with contract ID, merchant customer ID
   *
   * **Service function reference:**
   * ```go
   * func (s *paymentService) CreateContractWithoutCharge(ctx context.Context, req *CreateContractWithoutChargeRequest) (*CreateContractWithoutChargeResponse, error) {
   *   // Validates buyer information
   *   // Creates contract ID in payment info database
   *   // Create merchant customer if not exists
   *   // Creates payment link
   *   // Returns payment link with contract ID and merchant customer ID
   * }
   * ```
   *
   * @generated from rpc api.v1.PaymentService.CreateContractWithoutCharge
   */
  createContractWithoutCharge: {
    methodKind: "unary";
    input: typeof CreateContractWithoutChargeRequestSchema;
    output: typeof CreateContractWithoutChargeResponseSchema;
  },
  /**
   * ## CreateContractWithCharge
   *
   * Creates a new contract with an immediate initial charge. This combines
   * contract creation and charging in a single operation for convenience.
   *
   * This is typically used for initial sign-ups that require immediate payment.
   *
   * **Parameters:**
   * - CreateContractWithChargeRequest: Contains buyer information, redirect details, and charge information
   *
   * **Returns:**
   * - CreateContractWithChargeResponse: Contains the created payment link with contract ID, charge ID, merchant customer ID
   *
   * **Service function reference:**
   * ```go
   * func (s *paymentService) CreateContractWithCharge(ctx context.Context, req *CreateContractWithChargeRequest) (*CreateContractWithChargeResponse, error) {
   *   // Validates buyer and payment information
   *   // Creates contract ID and charge ID in payment info database
   *   // Create merchant customer if not exists
   *   // Creates payment link
   *   // Returns payment link with contract and charge IDs along with merchant customer ID
   * }
   * ```
   *
   * @generated from rpc api.v1.PaymentService.CreateContractWithCharge
   */
  createContractWithCharge: {
    methodKind: "unary";
    input: typeof CreateContractWithChargeRequestSchema;
    output: typeof CreateContractWithChargeResponseSchema;
  },
  /**
   * ## AddCharge
   *
   * Adds a new charge to an existing contract. This allows for charging
   * a jamm user after a contract has been established.
   *
   * Common uses include recurring billing, add-on purchases, or usage-based charges.
   *
   * **Parameters:**
   * - AddChargeRequest: Contains merchant customer ID and charge details
   *
   * **Returns:**
   * - AddChargeResponse: Contains the created payment link with charge ID
   *
   * **Service function reference:**
   * ```go
   * func (s *paymentService) AddCharge(ctx context.Context, req *AddChargeRequest) (*AddChargeResponse, error) {
   *   // Validates contract links to the merchant customer and payment information
   *   // Creates charge ID in payment info database
   *   // Creates payment link
   *   // Returns payment link with contract and charge IDs
   * }
   * ```
   *
   * @generated from rpc api.v1.PaymentService.AddCharge
   */
  addCharge: {
    methodKind: "unary";
    input: typeof AddChargeRequestSchema;
    output: typeof AddChargeResponseSchema;
  },
  /**
   * @generated from rpc api.v1.PaymentService.GetCharge
   */
  getCharge: {
    methodKind: "unary";
    input: typeof GetChargeRequestSchema;
    output: typeof GetChargeResponseSchema;
  },
  /**
   * @generated from rpc api.v1.PaymentService.GetCharges
   */
  getCharges: {
    methodKind: "unary";
    input: typeof GetChargesRequestSchema;
    output: typeof GetChargesResponseSchema;
  },
  /**
   * Withdraw
   *
   * Withdraws money from a customer immediately. This call is synchronous.
   *
   * @param WithdrawRequest Contains merchant customer ID and charge details
   * @return WithdrawResponse Contains the created payment link with charge ID
   *
   * Service function reference:
   * func (s *paymentService) Withdraw(ctx context.Context, req *WithdrawRequest) (*WithdrawResponse, error) {
   *   // Validates contract links to the merchant customer and payment information
   *   // Creates charge ID in payment info database
   *   // Creates payment link
   *   // Returns payment link with contract and charge IDs
   * }
   *
   * @generated from rpc api.v1.PaymentService.Withdraw
   */
  withdraw: {
    methodKind: "unary";
    input: typeof WithdrawRequestSchema;
    output: typeof WithdrawResponseSchema;
  },
  /**
   * ## OffSessionPayment
   *
   * Processes a payment directly within your application without requiring redirects.
   * This is an off-session payment that executes immediately and synchronously.
   *
   * This API is used for existing customers - Executes a charge to an existing customer when a customer ID is provided
   *
   * @param OffSessionPaymentRequest: Contains optional customer ID and charge details
   * @return OffSessionPaymentResponse: Contains the charge result and customer information
   *
   * **Service function reference:**
   * ```go
   * func (s *paymentService) Withdraw(ctx context.Context, req *WithdrawRequest) (*WithdrawResponse, error) {
   *   // Validates payment information
   *   // Processes the payment immediately without redirects
   *   // Returns charge result and customer information
   * }
   * ```
   *
   * @generated from rpc api.v1.PaymentService.OffSessionPayment
   */
  offSessionPayment: {
    methodKind: "unary";
    input: typeof OffSessionPaymentRequestSchema;
    output: typeof OffSessionPaymentResponseSchema;
  },
  /**
   * ## OnSessionPayment
   *
   * Provides a unified interface for creating payment sessions. This API intelligently routes
   * requests to the appropriate method based on the provided parameters:
   *
   * - When a customer ID is provided: Uses AddCharge for existing customers
   * - When buyer + charge are provided: Uses CreateContractWithCharge for new customers with charges
   * - When only buyer is provided: Uses CreateContractWithoutCharge for new customers without charges
   *
   * **Parameters:**
   * - OnSessionPaymentRequest: Contains optional customer/buyer info, optional charge details, and redirect URLs
   *
   * **Returns:**
   * - OnSessionPaymentResponse: Contains unified payment information including payment link
   *
   * **Service function reference:**
   * ```go
   * func (s *paymentService) OnSessionPayment(ctx context.Context, req *OnSessionPaymentRequest) (*OnSessionPaymentResponse, error) {
   *   // Determines appropriate payment strategy based on request parameters
   *   // Routes to AddCharge, CreateContractWithCharge, or CreateContractWithoutCharge
   *   // Returns standardized response with payment link and relevant details
   * }
   * ```
   *
   * @generated from rpc api.v1.PaymentService.OnSessionPayment
   */
  onSessionPayment: {
    methodKind: "unary";
    input: typeof OnSessionPaymentRequestSchema;
    output: typeof OnSessionPaymentResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_payment, 0);

