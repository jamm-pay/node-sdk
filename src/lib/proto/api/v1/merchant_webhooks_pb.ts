// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,json_types=true"
// @generated from file api/v1/merchant_webhooks.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { ErrorType, ErrorTypeJson } from "../../error/v1/error_pb";
import { file_error_v1_error } from "../../error/v1/error_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import type { Any, AnyJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/merchant_webhooks.proto.
 */
export const file_api_v1_merchant_webhooks: GenFile = /*@__PURE__*/
  fileDesc("Ch5hcGkvdjEvbWVyY2hhbnRfd2ViaG9va3MucHJvdG8SBmFwaS52MSIOCgxFcnJvclJlcXVlc3QiOAoNRXJyb3JSZXNwb25zZRInCgplcnJvcl90eXBlGAEgASgOMhMuZXJyb3IudjEuRXJyb3JUeXBlIhAKDk1lc3NhZ2VSZXF1ZXN0Iu8BCg9NZXNzYWdlUmVzcG9uc2USQAoYbWVyY2hhbnRfd2ViaG9va19tZXNzYWdlGAEgASgLMh4uYXBpLnYxLk1lcmNoYW50V2ViaG9va01lc3NhZ2USLQoOY2hhcmdlX21lc3NhZ2UYAiABKAsyFS5hcGkudjEuQ2hhcmdlTWVzc2FnZRIxChBjb250cmFjdF9tZXNzYWdlGAMgASgLMhcuYXBpLnYxLkNvbnRyYWN0TWVzc2FnZRI4ChR1c2VyX2FjY291bnRfbWVzc2FnZRgEIAEoCzIaLmFwaS52MS5Vc2VyQWNjb3VudE1lc3NhZ2UitgEKFk1lcmNoYW50V2ViaG9va01lc3NhZ2USCgoCaWQYASABKAkSEQoJc2lnbmF0dXJlGAIgASgJEiUKCmV2ZW50X3R5cGUYBCABKA4yES5hcGkudjEuRXZlbnRUeXBlEiUKB2NvbnRlbnQYBSABKAsyFC5nb29nbGUucHJvdG9idWYuQW55Ei8KCmNyZWF0ZWRfYXQY5wcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKsBAoNQ2hhcmdlTWVzc2FnZRIKCgJpZBgBIAEoCRIhCghjdXN0b21lchgCIAEoCUIPukgMcgoyCF5jdXMtLiokEiwKBnN0YXR1cxgDIAEoDjIcLmFwaS52MS5DaGFyZ2VNZXNzYWdlLlN0YXR1cxITCgtkZXNjcmlwdGlvbhgEIAEoCRIVCg1tZXJjaGFudF9uYW1lGAUgASgJEhYKDmluaXRpYWxfYW1vdW50GAYgASgFEhAKCGRpc2NvdW50GAcgASgFEhQKDGZpbmFsX2Ftb3VudBgIIAEoBRIcCg9hbW91bnRfcmVmdW5kZWQYCSABKAVIAIgBARIQCghjdXJyZW5jeRgKIAEoCRIZCgxwcm9jZXNzZWRfYXQYCyABKAlIAYgBARISCgpjcmVhdGVkX2F0GA0gASgJEhIKCnVwZGF0ZWRfYXQYDiABKAkSIQoFZXJyb3IYFCABKAsyDS5hcGkudjEuRXJyb3JIAogBASKMAQoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEhIKDlNUQVRVU19TVUNDRVNTEAESEgoOU1RBVFVTX0ZBSUxVUkUQAhIXChNTVEFUVVNfV0FJVElOR19FS1lDEAMSEwoPU1RBVFVTX0JMT0NLSU5HEAQSFAoQU1RBVFVTX0NBTkNFTExFRBAFQhIKEF9hbW91bnRfcmVmdW5kZWRCDwoNX3Byb2Nlc3NlZF9hdEIICgZfZXJyb3IidQoPQ29udHJhY3RNZXNzYWdlEiEKCGN1c3RvbWVyGAEgASgJQg+6SAxyCjIIXmN1cy0uKiQSEgoKY3JlYXRlZF9hdBgCIAEoCRIUCgxhY3RpdmF0ZWRfYXQYAyABKAkSFQoNbWVyY2hhbnRfbmFtZRgEIAEoCSJxChJVc2VyQWNjb3VudE1lc3NhZ2USIQoIY3VzdG9tZXIYASABKAlCD7pIDHIKMgheY3VzLS4qJBINCgVlbWFpbBgCIAEoCRISCgpkZWxldGVkX2F0GAMgASgJEhUKDW1lcmNoYW50X25hbWUYBCABKAkiTAoFRXJyb3ISDAoEY29kZRgBIAEoCRIPCgdtZXNzYWdlGAIgASgJEiQKB2RldGFpbHMYAyADKAsyEy5hcGkudjEuRXJyb3JEZXRhaWwiOQoLRXJyb3JEZXRhaWwSDAoEdHlwZRgBIAEoCRINCgV2YWx1ZRgCIAEoCRINCgVkZWJ1ZxgDIAEoCSqeAgoJRXZlbnRUeXBlEhoKFkVWRU5UX1RZUEVfVU5TUEVDSUZJRUQQABIdChlFVkVOVF9UWVBFX0NIQVJHRV9DUkVBVEVEEAMSHQoZRVZFTlRfVFlQRV9DSEFSR0VfVVBEQVRFRBAEEh0KGUVWRU5UX1RZUEVfQ0hBUkdFX1NVQ0NFU1MQBRIaChZFVkVOVF9UWVBFX0NIQVJHRV9GQUlMEAYSHAoYRVZFTlRfVFlQRV9DSEFSR0VfQ0FOQ0VMEAcSIQodRVZFTlRfVFlQRV9DT05UUkFDVF9BQ1RJVkFURUQQFBIjCh9FVkVOVF9UWVBFX1VTRVJfQUNDT1VOVF9ERUxFVEVEEB4SFgoSRVZFTlRfVFlQRV9URVNUSU5HEGMyrAEKDldlYmhvb2tTZXJ2aWNlEkgKBUVycm9yEhQuYXBpLnYxLkVycm9yUmVxdWVzdBoVLmFwaS52MS5FcnJvclJlc3BvbnNlIhKC0+STAgw6ASoiBy9lcnJvcnMSUAoHTWVzc2FnZRIWLmFwaS52MS5NZXNzYWdlUmVxdWVzdBoXLmFwaS52MS5NZXNzYWdlUmVzcG9uc2UiFILT5JMCDjoBKiIJL3dlYmhvb2tzQnkKCmNvbS5hcGkudjFCFU1lcmNoYW50V2ViaG9va3NQcm90b1ABWhthcGkvcHJvdG8vZ2VuL2FwaS92MTthcGlfdjGiAgNBWFiqAgZBcGkuVjHKAgZBcGlcVjHiAhJBcGlcVjFcR1BCTWV0YWRhdGHqAgdBcGk6OlYxYgZwcm90bzM", [file_buf_validate_validate, file_error_v1_error, file_google_api_annotations, file_google_protobuf_any, file_google_protobuf_timestamp]);

/**
 * @generated from message api.v1.ErrorRequest
 */
export type ErrorRequest = Message<"api.v1.ErrorRequest"> & {
};

/**
 * @generated from message api.v1.ErrorRequest
 */
export type ErrorRequestJson = {
};

/**
 * Describes the message api.v1.ErrorRequest.
 * Use `create(ErrorRequestSchema)` to create a new message.
 */
export const ErrorRequestSchema: GenMessage<ErrorRequest, ErrorRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 0);

/**
 * @generated from message api.v1.ErrorResponse
 */
export type ErrorResponse = Message<"api.v1.ErrorResponse"> & {
  /**
   * @generated from field: error.v1.ErrorType error_type = 1;
   */
  errorType: ErrorType;
};

/**
 * @generated from message api.v1.ErrorResponse
 */
export type ErrorResponseJson = {
  /**
   * @generated from field: error.v1.ErrorType error_type = 1;
   */
  errorType?: ErrorTypeJson;
};

/**
 * Describes the message api.v1.ErrorResponse.
 * Use `create(ErrorResponseSchema)` to create a new message.
 */
export const ErrorResponseSchema: GenMessage<ErrorResponse, ErrorResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 1);

/**
 * @generated from message api.v1.MessageRequest
 */
export type MessageRequest = Message<"api.v1.MessageRequest"> & {
};

/**
 * @generated from message api.v1.MessageRequest
 */
export type MessageRequestJson = {
};

/**
 * Describes the message api.v1.MessageRequest.
 * Use `create(MessageRequestSchema)` to create a new message.
 */
export const MessageRequestSchema: GenMessage<MessageRequest, MessageRequestJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 2);

/**
 * @generated from message api.v1.MessageResponse
 */
export type MessageResponse = Message<"api.v1.MessageResponse"> & {
  /**
   * You must explicitly add webhook message types here,
   * otherwise Proto to OpenAPI generator won't generate the message correctly.
   *
   * @generated from field: api.v1.MerchantWebhookMessage merchant_webhook_message = 1;
   */
  merchantWebhookMessage?: MerchantWebhookMessage;

  /**
   * @generated from field: api.v1.ChargeMessage charge_message = 2;
   */
  chargeMessage?: ChargeMessage;

  /**
   * @generated from field: api.v1.ContractMessage contract_message = 3;
   */
  contractMessage?: ContractMessage;

  /**
   * @generated from field: api.v1.UserAccountMessage user_account_message = 4;
   */
  userAccountMessage?: UserAccountMessage;
};

/**
 * @generated from message api.v1.MessageResponse
 */
export type MessageResponseJson = {
  /**
   * You must explicitly add webhook message types here,
   * otherwise Proto to OpenAPI generator won't generate the message correctly.
   *
   * @generated from field: api.v1.MerchantWebhookMessage merchant_webhook_message = 1;
   */
  merchantWebhookMessage?: MerchantWebhookMessageJson;

  /**
   * @generated from field: api.v1.ChargeMessage charge_message = 2;
   */
  chargeMessage?: ChargeMessageJson;

  /**
   * @generated from field: api.v1.ContractMessage contract_message = 3;
   */
  contractMessage?: ContractMessageJson;

  /**
   * @generated from field: api.v1.UserAccountMessage user_account_message = 4;
   */
  userAccountMessage?: UserAccountMessageJson;
};

/**
 * Describes the message api.v1.MessageResponse.
 * Use `create(MessageResponseSchema)` to create a new message.
 */
export const MessageResponseSchema: GenMessage<MessageResponse, MessageResponseJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 3);

/**
 * MerchantWebhookMessage is a generic message wrapper representing an event
 * for a specific merchant.
 *
 * @generated from message api.v1.MerchantWebhookMessage
 */
export type MerchantWebhookMessage = Message<"api.v1.MerchantWebhookMessage"> & {
  /**
   * Unique identifier for the webhook.
   * It represents the message uniqueness, therefore it won't change when retried.
   * Use this value to avoid processing the same message multiple times.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Signature of the message.
   *
   * @generated from field: string signature = 2;
   */
  signature: string;

  /**
   * Defines the type of the webhook (aka Event Type).
   * Refer to this type when receiver decode (unmarshal) the message.
   *
   * @generated from field: api.v1.EventType event_type = 4;
   */
  eventType: EventType;

  /**
   * Content includes message data.
   *
   * @generated from field: google.protobuf.Any content = 5;
   */
  content?: Any;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 999;
   */
  createdAt?: Timestamp;
};

/**
 * MerchantWebhookMessage is a generic message wrapper representing an event
 * for a specific merchant.
 *
 * @generated from message api.v1.MerchantWebhookMessage
 */
export type MerchantWebhookMessageJson = {
  /**
   * Unique identifier for the webhook.
   * It represents the message uniqueness, therefore it won't change when retried.
   * Use this value to avoid processing the same message multiple times.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * Signature of the message.
   *
   * @generated from field: string signature = 2;
   */
  signature?: string;

  /**
   * Defines the type of the webhook (aka Event Type).
   * Refer to this type when receiver decode (unmarshal) the message.
   *
   * @generated from field: api.v1.EventType event_type = 4;
   */
  eventType?: EventTypeJson;

  /**
   * Content includes message data.
   *
   * @generated from field: google.protobuf.Any content = 5;
   */
  content?: AnyJson;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 999;
   */
  createdAt?: TimestampJson;
};

/**
 * Describes the message api.v1.MerchantWebhookMessage.
 * Use `create(MerchantWebhookMessageSchema)` to create a new message.
 */
export const MerchantWebhookMessageSchema: GenMessage<MerchantWebhookMessage, MerchantWebhookMessageJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 4);

/**
 * @generated from message api.v1.ChargeMessage
 */
export type ChargeMessage = Message<"api.v1.ChargeMessage"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string customer = 2;
   */
  customer: string;

  /**
   * @generated from field: api.v1.ChargeMessage.Status status = 3;
   */
  status: ChargeMessage_Status;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string merchant_name = 5;
   */
  merchantName: string;

  /**
   * @generated from field: int32 initial_amount = 6;
   */
  initialAmount: number;

  /**
   * @generated from field: int32 discount = 7;
   */
  discount: number;

  /**
   * @generated from field: int32 final_amount = 8;
   */
  finalAmount: number;

  /**
   * @generated from field: optional int32 amount_refunded = 9;
   */
  amountRefunded?: number;

  /**
   * @generated from field: string currency = 10;
   */
  currency: string;

  /**
   * @generated from field: optional string processed_at = 11;
   */
  processedAt?: string;

  /**
   * @generated from field: string created_at = 13;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 14;
   */
  updatedAt: string;

  /**
   * @generated from field: optional api.v1.Error error = 20;
   */
  error?: Error;
};

/**
 * @generated from message api.v1.ChargeMessage
 */
export type ChargeMessageJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: string customer = 2;
   */
  customer?: string;

  /**
   * @generated from field: api.v1.ChargeMessage.Status status = 3;
   */
  status?: ChargeMessage_StatusJson;

  /**
   * @generated from field: string description = 4;
   */
  description?: string;

  /**
   * @generated from field: string merchant_name = 5;
   */
  merchantName?: string;

  /**
   * @generated from field: int32 initial_amount = 6;
   */
  initialAmount?: number;

  /**
   * @generated from field: int32 discount = 7;
   */
  discount?: number;

  /**
   * @generated from field: int32 final_amount = 8;
   */
  finalAmount?: number;

  /**
   * @generated from field: optional int32 amount_refunded = 9;
   */
  amountRefunded?: number;

  /**
   * @generated from field: string currency = 10;
   */
  currency?: string;

  /**
   * @generated from field: optional string processed_at = 11;
   */
  processedAt?: string;

  /**
   * @generated from field: string created_at = 13;
   */
  createdAt?: string;

  /**
   * @generated from field: string updated_at = 14;
   */
  updatedAt?: string;

  /**
   * @generated from field: optional api.v1.Error error = 20;
   */
  error?: ErrorJson;
};

/**
 * Describes the message api.v1.ChargeMessage.
 * Use `create(ChargeMessageSchema)` to create a new message.
 */
export const ChargeMessageSchema: GenMessage<ChargeMessage, ChargeMessageJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 5);

/**
 * @generated from enum api.v1.ChargeMessage.Status
 */
export enum ChargeMessage_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * @generated from enum value: STATUS_FAILURE = 2;
   */
  FAILURE = 2,

  /**
   * @generated from enum value: STATUS_WAITING_EKYC = 3;
   */
  WAITING_EKYC = 3,

  /**
   * @generated from enum value: STATUS_BLOCKING = 4;
   */
  BLOCKING = 4,

  /**
   * @generated from enum value: STATUS_CANCELLED = 5;
   */
  CANCELLED = 5,
}

/**
 * @generated from enum api.v1.ChargeMessage.Status
 */
export type ChargeMessage_StatusJson = "STATUS_UNSPECIFIED" | "STATUS_SUCCESS" | "STATUS_FAILURE" | "STATUS_WAITING_EKYC" | "STATUS_BLOCKING" | "STATUS_CANCELLED";

/**
 * Describes the enum api.v1.ChargeMessage.Status.
 */
export const ChargeMessage_StatusSchema: GenEnum<ChargeMessage_Status, ChargeMessage_StatusJson> = /*@__PURE__*/
  enumDesc(file_api_v1_merchant_webhooks, 5, 0);

/**
 * @generated from message api.v1.ContractMessage
 */
export type ContractMessage = Message<"api.v1.ContractMessage"> & {
  /**
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * @generated from field: string created_at = 2;
   */
  createdAt: string;

  /**
   * @generated from field: string activated_at = 3;
   */
  activatedAt: string;

  /**
   * @generated from field: string merchant_name = 4;
   */
  merchantName: string;
};

/**
 * @generated from message api.v1.ContractMessage
 */
export type ContractMessageJson = {
  /**
   * @generated from field: string customer = 1;
   */
  customer?: string;

  /**
   * @generated from field: string created_at = 2;
   */
  createdAt?: string;

  /**
   * @generated from field: string activated_at = 3;
   */
  activatedAt?: string;

  /**
   * @generated from field: string merchant_name = 4;
   */
  merchantName?: string;
};

/**
 * Describes the message api.v1.ContractMessage.
 * Use `create(ContractMessageSchema)` to create a new message.
 */
export const ContractMessageSchema: GenMessage<ContractMessage, ContractMessageJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 6);

/**
 * UserAccountMessage contains information about a user account operation.
 *
 * @generated from message api.v1.UserAccountMessage
 */
export type UserAccountMessage = Message<"api.v1.UserAccountMessage"> & {
  /**
   * @generated from field: string customer = 1;
   */
  customer: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string deleted_at = 3;
   */
  deletedAt: string;

  /**
   * @generated from field: string merchant_name = 4;
   */
  merchantName: string;
};

/**
 * UserAccountMessage contains information about a user account operation.
 *
 * @generated from message api.v1.UserAccountMessage
 */
export type UserAccountMessageJson = {
  /**
   * @generated from field: string customer = 1;
   */
  customer?: string;

  /**
   * @generated from field: string email = 2;
   */
  email?: string;

  /**
   * @generated from field: string deleted_at = 3;
   */
  deletedAt?: string;

  /**
   * @generated from field: string merchant_name = 4;
   */
  merchantName?: string;
};

/**
 * Describes the message api.v1.UserAccountMessage.
 * Use `create(UserAccountMessageSchema)` to create a new message.
 */
export const UserAccountMessageSchema: GenMessage<UserAccountMessage, UserAccountMessageJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 7);

/**
 * Generic error type.
 *
 * @generated from message api.v1.Error
 */
export type Error = Message<"api.v1.Error"> & {
  /**
   * Jamm defined error code.
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * Human readable error message.
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * ConnectRPC error details.
   *
   * @generated from field: repeated api.v1.ErrorDetail details = 3;
   */
  details: ErrorDetail[];
};

/**
 * Generic error type.
 *
 * @generated from message api.v1.Error
 */
export type ErrorJson = {
  /**
   * Jamm defined error code.
   *
   * @generated from field: string code = 1;
   */
  code?: string;

  /**
   * Human readable error message.
   *
   * @generated from field: string message = 2;
   */
  message?: string;

  /**
   * ConnectRPC error details.
   *
   * @generated from field: repeated api.v1.ErrorDetail details = 3;
   */
  details?: ErrorDetailJson[];
};

/**
 * Describes the message api.v1.Error.
 * Use `create(ErrorSchema)` to create a new message.
 */
export const ErrorSchema: GenMessage<Error, ErrorJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 8);

/**
 * @generated from message api.v1.ErrorDetail
 */
export type ErrorDetail = Message<"api.v1.ErrorDetail"> & {
  /**
   * Protobuf message type.
   * e.g. google.protobuf.StringValue
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Base64 encoded value of the message.
   *
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * Human-readable debug information.
   * Check this field to determine the error type.
   * e.g. ERROR_TYPE_ACCOUNT_BANK_REGISTRATION_FAILED
   *
   * @generated from field: string debug = 3;
   */
  debug: string;
};

/**
 * @generated from message api.v1.ErrorDetail
 */
export type ErrorDetailJson = {
  /**
   * Protobuf message type.
   * e.g. google.protobuf.StringValue
   *
   * @generated from field: string type = 1;
   */
  type?: string;

  /**
   * Base64 encoded value of the message.
   *
   * @generated from field: string value = 2;
   */
  value?: string;

  /**
   * Human-readable debug information.
   * Check this field to determine the error type.
   * e.g. ERROR_TYPE_ACCOUNT_BANK_REGISTRATION_FAILED
   *
   * @generated from field: string debug = 3;
   */
  debug?: string;
};

/**
 * Describes the message api.v1.ErrorDetail.
 * Use `create(ErrorDetailSchema)` to create a new message.
 */
export const ErrorDetailSchema: GenMessage<ErrorDetail, ErrorDetailJson> = /*@__PURE__*/
  messageDesc(file_api_v1_merchant_webhooks, 9);

/**
 * EventType defines the webhook events that Jamm sends to merchant endpoints.
 * These events allow merchants to track the lifecycle of payments and contracts
 * and take appropriate actions in their systems.
 *
 * @generated from enum api.v1.EventType
 */
export enum EventType {
  /**
   * No event type specified (default value).
   * Merchants should ignore messages with this event type.
   *
   * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Fired when a charge is first created but not yet processed.
   *
   * @generated from enum value: EVENT_TYPE_CHARGE_CREATED = 3;
   */
  CHARGE_CREATED = 3,

  /**
   * Fired when a charge's details or status changes.
   * Common scenarios include:
   * - Status change after KYC approval
   * Payload contains the updated charge details with current status.
   *
   * @generated from enum value: EVENT_TYPE_CHARGE_UPDATED = 4;
   */
  CHARGE_UPDATED = 4,

  /**
   * Fired when a payment is successfully completed.
   * Payload contains the finalized charge details including amount, currency,
   * and transaction timestamps.
   * Merchants should fulfill orders or provide access to purchased services.
   *
   * @generated from enum value: EVENT_TYPE_CHARGE_SUCCESS = 5;
   */
  CHARGE_SUCCESS = 5,

  /**
   * Fired when a payment attempt fails for any reason.
   * Payload contains charge details with failure information and error codes.
   * Merchants may want to contact the customer or attempt recovery actions.
   *
   * @generated from enum value: EVENT_TYPE_CHARGE_FAIL = 6;
   */
  CHARGE_FAIL = 6,

  /**
   * Fired when a charge is canceled by the merchant.
   * Payload contains the canceled charge details.
   * Merchants should update their records to reflect the cancellation.
   *
   * @generated from enum value: EVENT_TYPE_CHARGE_CANCEL = 7;
   */
  CHARGE_CANCEL = 7,

  /**
   * Fired when a contract is activated.
   *
   * @generated from enum value: EVENT_TYPE_CONTRACT_ACTIVATED = 20;
   */
  CONTRACT_ACTIVATED = 20,

  /**
   * Fired when a Jamm user account is deleted.
   * Payload contains user account information.
   * Merchants should update their records about this customer.
   *
   * @generated from enum value: EVENT_TYPE_USER_ACCOUNT_DELETED = 30;
   */
  USER_ACCOUNT_DELETED = 30,

  /**
   * Used for testing webhook integrations and configurations.
   * Merchants can safely ignore this in production environments.
   *
   * @generated from enum value: EVENT_TYPE_TESTING = 99;
   */
  TESTING = 99,
}

/**
 * EventType defines the webhook events that Jamm sends to merchant endpoints.
 * These events allow merchants to track the lifecycle of payments and contracts
 * and take appropriate actions in their systems.
 *
 * @generated from enum api.v1.EventType
 */
export type EventTypeJson = "EVENT_TYPE_UNSPECIFIED" | "EVENT_TYPE_CHARGE_CREATED" | "EVENT_TYPE_CHARGE_UPDATED" | "EVENT_TYPE_CHARGE_SUCCESS" | "EVENT_TYPE_CHARGE_FAIL" | "EVENT_TYPE_CHARGE_CANCEL" | "EVENT_TYPE_CONTRACT_ACTIVATED" | "EVENT_TYPE_USER_ACCOUNT_DELETED" | "EVENT_TYPE_TESTING";

/**
 * Describes the enum api.v1.EventType.
 */
export const EventTypeSchema: GenEnum<EventType, EventTypeJson> = /*@__PURE__*/
  enumDesc(file_api_v1_merchant_webhooks, 0);

/**
 * WebhookService is a placeholder service just to let OpenAPI codegen.
 * Jamm's current OpenAPI generator only generates code that is associated
 * with services.
 *
 * @generated from service api.v1.WebhookService
 */
export const WebhookService: GenService<{
  /**
   * Error placeholder.
   * This method is not implemented on Jamm backend.
   *
   * @generated from rpc api.v1.WebhookService.Error
   */
  error: {
    methodKind: "unary";
    input: typeof ErrorRequestSchema;
    output: typeof ErrorResponseSchema;
  },
  /**
   * Message placeholder.
   * This method is not implemented on Jamm backend.
   *
   * @generated from rpc api.v1.WebhookService.Message
   */
  message: {
    methodKind: "unary";
    input: typeof MessageRequestSchema;
    output: typeof MessageResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_merchant_webhooks, 0);

