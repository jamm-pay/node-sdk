// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,json_types=true"
// @generated from file api/v1/common.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/common.proto.
 */
export const file_api_v1_common: GenFile = /*@__PURE__*/
  fileDesc("ChNhcGkvdjEvY29tbW9uLnByb3RvEgZhcGkudjEitgUKBUJ1eWVyEkkKBWVtYWlsGAEgASgJQjq6SDe6ATQKC3ZhbGlkX2VtYWlsEhVtdXN0IGJlIGEgdmFsaWQgZW1haWwaDnRoaXMuaXNFbWFpbCgpEhEKCWZvcmNlX2t5YxgCIAEoCBIvCgVwaG9uZRgDIAEoCUIbukgYchYyEV4wWzc4OV0wWzAtOV17OH0kmAELSACIAQESHAoEbmFtZRgEIAEoCUIJukgGcgQQARgySAGIAQESKgoSa2F0YWthbmFfbGFzdF9uYW1lGAsgASgJQgm6SAZyBBABGDJIAogBARIrChNrYXRha2FuYV9maXJzdF9uYW1lGAwgASgJQgm6SAZyBBABGDJIA4gBARIfCgdhZGRyZXNzGA0gASgJQgm6SAZyBBAFGGRIBIgBARI2CgpiaXJ0aF9kYXRlGBQgASgJQh26SBpyGDIWXihcZHs0fS1cZHsyfS1cZHsyfSk/JEgFiAEBEjEKBmdlbmRlchgVIAEoCUIcukgZchdSBmZlbWFsZVIEbWFsZVIHdW5rbm93bkgGiAEBEkQKCmV4cGlyZXNfYXQYFiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQg+6SAyyAQlKBQiAmp4BQABIB4gBARItCghtZXRhZGF0YRgeIAMoCzIbLmFwaS52MS5CdXllci5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIICgZfcGhvbmVCBwoFX25hbWVCFQoTX2thdGFrYW5hX2xhc3RfbmFtZUIWChRfa2F0YWthbmFfZmlyc3RfbmFtZUIKCghfYWRkcmVzc0INCgtfYmlydGhfZGF0ZUIJCgdfZ2VuZGVyQg0KC19leHBpcmVzX2F0IloKEE1lcmNoYW50Q3VzdG9tZXISIgoIY3VzdG9tZXIYASABKAsyEC5hcGkudjEuQ3VzdG9tZXISIgoIbWVyY2hhbnQYAiABKAsyEC5hcGkudjEuTWVyY2hhbnQi/AEKCEN1c3RvbWVyEhsKAmlkGAEgASgJQg+6SAxyCjIIXmN1cy0uKiQSDQoFZW1haWwYAiABKAkSEQoJYWN0aXZhdGVkGAQgASgIEh4KBnN0YXR1cxgFIAEoCzIOLmFwaS52MS5TdGF0dXMSMQoQYmFua19pbmZvcm1hdGlvbhgGIAEoCzIXLmFwaS52MS5CYW5rSW5mb3JtYXRpb24SLgoKY3JlYXRlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiXQoGU3RhdHVzEjMKB3BheW1lbnQYASABKA4yIi5hcGkudjEuUGF5bWVudEF1dGhvcml6YXRpb25TdGF0dXMSHgoDa3ljGAIgASgOMhEuYXBpLnYxLkt5Y1N0YXR1cyJ8Cg9CYW5rSW5mb3JtYXRpb24SFgoOYWNjb3VudF9udW1iZXIYASABKAkSEQoJYmFua19uYW1lGAIgASgJEhMKC2JyYW5jaF9uYW1lGAMgASgJEikKDGRlcG9zaXRfdHlwZRgEIAEoDjITLmFwaS52MS5EZXBvc2l0VHlwZSI1CghNZXJjaGFudBIbCgJpZBgBIAEoCUIPukgMcgoyCF5tZXItLiokEgwKBG5hbWUYAiABKAkisAEKCENvbnRyYWN0EhwKAmlkGAEgASgJQhC6SA1yCzIJXmNvbi1cZCskEiYKBnN0YXR1cxgCIAEoDjIWLmFwaS52MS5Db250cmFjdFN0YXR1cxIuCgpjcmVhdGVkX2F0GBQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GBUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCI+CgpQYWdpbmF0aW9uEhwKCXBhZ2Vfc2l6ZRgBIAEoBUIJukgGGgQYZCAAEhIKCnBhZ2VfdG9rZW4YAiABKAkinAQKBEJhbmsSDAoEY29kZRgBIAEoCRIMCgRuYW1lGAIgASgJEhUKDW5hbWVfa2F0YWthbmEYAyABKAkSFQoNbmFtZV9oaXJhZ2FuYRgEIAEoCRIVCg1uYW1lX2FscGhhYmV0GAUgASgJEiIKBmFzc2V0cxgLIAEoCzISLmFwaS52MS5CYW5rQXNzZXRzEiAKBXF1b3RhGBQgASgLMhEuYXBpLnYxLkJhbmtRdW90YRIVCg1vcGVuaW5nX2hvdXJzGB4gASgJEk4KHmJhbmtwYXlfc2NoZWR1bGVkX21haW50ZW5hbmNlcxgoIAMoCzImLmFwaS52MS5CYW5rU2NoZWR1bGVkTWFpbnRlbmFuY2VQZXJpb2QSSwobYmFua19zY2hlZHVsZWRfbWFpbnRlbmFuY2VzGCkgAygLMiYuYXBpLnYxLkJhbmtTY2hlZHVsZWRNYWludGVuYW5jZVBlcmlvZBJTCiNyZWdpc3RyYXRpb25fc2NoZWR1bGVkX21haW50ZW5hbmNlcxgqIAMoCzImLmFwaS52MS5CYW5rU2NoZWR1bGVkTWFpbnRlbmFuY2VQZXJpb2QSGQoRYmFua3BheV9hdmFpbGFibGUYMiABKAgSFgoOYmFua19hdmFpbGFibGUYMyABKAgSHgoWcmVnaXN0cmF0aW9uX2F2YWlsYWJsZRg0IAEoCBIRCglvcGVyYXRpbmcYYyABKAgivwMKCUJhbmtRdW90YRIyCipvZmZsaW5lX3B1cmNoYXNlX2xpbWl0X3Blcl9jaGFyZ2Vfd2l0aF9reWMYASABKAUSNQotb2ZmbGluZV9wdXJjaGFzZV9saW1pdF9wZXJfY2hhcmdlX3dpdGhvdXRfa3ljGAIgASgFEi8KJ29mZmxpbmVfcHVyY2hhc2VfbGltaXRfcGVyX2RheV93aXRoX2t5YxgKIAEoBRIyCipvZmZsaW5lX3B1cmNoYXNlX2xpbWl0X3Blcl9kYXlfd2l0aG91dF9reWMYCyABKAUSNwovc3Vic2NyaXB0aW9uX3B1cmNoYXNlX2xpbWl0X3Blcl9jaGFyZ2Vfd2l0aF9reWMYFCABKAUSOgoyc3Vic2NyaXB0aW9uX3B1cmNoYXNlX2xpbWl0X3Blcl9jaGFyZ2Vfd2l0aG91dF9reWMYFSABKAUSNAosc3Vic2NyaXB0aW9uX3B1cmNoYXNlX2xpbWl0X3Blcl9kYXlfd2l0aF9reWMYHiABKAUSNwovc3Vic2NyaXB0aW9uX3B1cmNoYXNlX2xpbWl0X3Blcl9kYXlfd2l0aG91dF9reWMYHyABKAUihwEKHkJhbmtTY2hlZHVsZWRNYWludGVuYW5jZVBlcmlvZBIRCgliYW5rX2NvZGUYASABKAkSFAoMc3RhcnRfYXRfanN0GAIgASgJEhIKCmVuZF9hdF9qc3QYAyABKAkSFAoMc3RhcnRfYXRfdXRjGAQgASgJEhIKCmVuZF9hdF91dGMYBSABKAkihwEKCkJhbmtCcmFuY2gSEQoJYmFua19jb2RlGAEgASgJEhMKC2JyYW5jaF9jb2RlGAIgASgJEgwKBG5hbWUYAyABKAkSFQoNbmFtZV9rYXRha2FuYRgEIAEoCRIVCg1uYW1lX2hpcmFnYW5hGAUgASgJEhUKDW5hbWVfYWxwaGFiZXQYBiABKAkiYwoKQmFua0Fzc2V0cxIRCgliYW5rX2NvZGUYASABKAkSFgoObG9nb191cmxfbGFyZ2UYAiABKAkSFwoPbG9nb191cmxfbWVkaXVtGAMgASgJEhEKCXRlcm1zX3VybBgKIAEoCSpgCgtEZXBvc2l0VHlwZRIcChhERVBPU0lUX1RZUEVfVU5TUEVDSUZJRUQQABIYChRERVBPU0lUX1RZUEVfU0FWSU5HUxABEhkKFURFUE9TSVRfVFlQRV9DSEVDS0lORxACKqgBChpQYXltZW50QXV0aG9yaXphdGlvblN0YXR1cxIsCihQQVlNRU5UX0FVVEhPUklaQVRJT05fU1RBVFVTX1VOU1BFQ0lGSUVEEAASKwonUEFZTUVOVF9BVVRIT1JJWkFUSU9OX1NUQVRVU19BVVRIT1JJWkVEEAESLworUEFZTUVOVF9BVVRIT1JJWkFUSU9OX1NUQVRVU19OT1RfQVVUSE9SSVpFRBACKo8BCglLeWNTdGF0dXMSGgoWS1lDX1NUQVRVU19VTlNQRUNJRklFRBAAEhcKE0tZQ19TVEFUVVNfQVBQUk9WRUQQARIcChhLWUNfU1RBVFVTX05PVF9TVUJNSVRURUQQAhIYChRLWUNfU1RBVFVTX0lOX1JFVklFVxADEhUKEUtZQ19TVEFUVVNfREVOSUVEEAQqrgIKDkNvbnRyYWN0U3RhdHVzEh8KG0NPTlRSQUNUX1NUQVRVU19VTlNQRUNJRklFRBAAEhsKF0NPTlRSQUNUX1NUQVRVU19JTklUSUFMEAESHAoYQ09OVFJBQ1RfU1RBVFVTX0FQUFJPVkVEEAISHQoZQ09OVFJBQ1RfU1RBVFVTX0FDVElWQVRFRBADEiAKHENPTlRSQUNUX1NUQVRVU19XQUlUSU5HX0VLWUMQBBIbChdDT05UUkFDVF9TVEFUVVNfRVhQSVJFRBAFEh8KG0NPTlRSQUNUX1NUQVRVU19ERUFDVElWQVRFRBAGEh0KGUNPTlRSQUNUX1NUQVRVU19DQU5DRUxMRUQQBxIiCh5DT05UUkFDVF9TVEFUVVNfUEVORElOR19DSEFSR0UQCEJvCgpjb20uYXBpLnYxQgtDb21tb25Qcm90b1ABWhthcGkvcHJvdG8vZ2VuL2FwaS92MTthcGlfdjGiAgNBWFiqAgZBcGkuVjHKAgZBcGlcVjHiAhJBcGlcVjFcR1BCTWV0YWRhdGHqAgdBcGk6OlYxYgZwcm90bzM", [file_buf_validate_validate, file_google_protobuf_timestamp]);

/**
 * Buyer is a representation of a customer in your e-commerce site.
 * We require this information to process the payment.
 *
 * 購入者とは、あなたのECサイトの顧客を表します。
 * この情報は決済を処理するために必要です。
 *
 * @generated from message api.v1.Buyer
 */
export type Buyer = Message<"api.v1.Buyer"> & {
  /**
   * Email of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * Customerのメールアドレス。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * A flag whether Jamm to force KYC for the customer.
   *
   * 初回購入時に購入者に対してKYCを強制するかどうかのフラグです。
   *
   * @generated from field: bool force_kyc = 2;
   */
  forceKyc: boolean;

  /**
   * Phone number of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - 09012345678
   *
   * Customerの電話番号。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string phone = 3;
   */
  phone?: string;

  /**
   * Name of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - John Appleseed
   * - 山田太郎
   *
   * 購入者の氏名。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string name = 4;
   */
  name?: string;

  /**
   * Katakana name of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g. ヤマダ
   *
   * Customerのカタカナ(姓)。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string katakana_last_name = 11;
   */
  katakanaLastName?: string;

  /**
   * Katakana name of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g. タロウ
   *
   * Customerのカタカナ(名)。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string katakana_first_name = 12;
   */
  katakanaFirstName?: string;

  /**
   * Address of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - 東京都港区六本木1-1-1
   *
   * Customerの住所。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string address = 13;
   */
  address?: string;

  /**
   * Birth date of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - 1990-01-01
   *
   * Customerの生年月日。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string birth_date = 20;
   */
  birthDate?: string;

  /**
   * Gender of the customer.
   *
   * Customerの性別。
   *
   * @generated from field: optional string gender = 21;
   */
  gender?: string;

  /**
   * Merchant can optionally set the expiry date for the contract.
   * Defaults to 90 minutes if not specified.
   *
   * 決済の有効期限。未指定の場合は90分後に自動失効します。
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 22;
   */
  expiresAt?: Timestamp;

  /**
   * Arbitrary key-value additional information about the customer.
   * You can see this information in our merchant dashboard.
   *
   * Customerに関する任意のキーと値の追加情報。
   * 加盟店ダッシュボードで確認できます。
   *
   * @generated from field: map<string, string> metadata = 30;
   */
  metadata: { [key: string]: string };
};

/**
 * Buyer is a representation of a customer in your e-commerce site.
 * We require this information to process the payment.
 *
 * 購入者とは、あなたのECサイトの顧客を表します。
 * この情報は決済を処理するために必要です。
 *
 * @generated from message api.v1.Buyer
 */
export type BuyerJson = {
  /**
   * Email of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * Customerのメールアドレス。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: string email = 1;
   */
  email?: string;

  /**
   * A flag whether Jamm to force KYC for the customer.
   *
   * 初回購入時に購入者に対してKYCを強制するかどうかのフラグです。
   *
   * @generated from field: bool force_kyc = 2;
   */
  forceKyc?: boolean;

  /**
   * Phone number of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - 09012345678
   *
   * Customerの電話番号。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string phone = 3;
   */
  phone?: string;

  /**
   * Name of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - John Appleseed
   * - 山田太郎
   *
   * 購入者の氏名。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string name = 4;
   */
  name?: string;

  /**
   * Katakana name of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g. ヤマダ
   *
   * Customerのカタカナ(姓)。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string katakana_last_name = 11;
   */
  katakanaLastName?: string;

  /**
   * Katakana name of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g. タロウ
   *
   * Customerのカタカナ(名)。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string katakana_first_name = 12;
   */
  katakanaFirstName?: string;

  /**
   * Address of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - 東京都港区六本木1-1-1
   *
   * Customerの住所。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string address = 13;
   */
  address?: string;

  /**
   * Birth date of the customer.
   * You can update this value later through the UpdateCustomer endpoint.
   *
   * e.g.
   * - 1990-01-01
   *
   * Customerの生年月日。
   * この値は UpdateCustomer エンドポイントを通じて後で更新できます。
   *
   * @generated from field: optional string birth_date = 20;
   */
  birthDate?: string;

  /**
   * Gender of the customer.
   *
   * Customerの性別。
   *
   * @generated from field: optional string gender = 21;
   */
  gender?: string;

  /**
   * Merchant can optionally set the expiry date for the contract.
   * Defaults to 90 minutes if not specified.
   *
   * 決済の有効期限。未指定の場合は90分後に自動失効します。
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 22;
   */
  expiresAt?: TimestampJson;

  /**
   * Arbitrary key-value additional information about the customer.
   * You can see this information in our merchant dashboard.
   *
   * Customerに関する任意のキーと値の追加情報。
   * 加盟店ダッシュボードで確認できます。
   *
   * @generated from field: map<string, string> metadata = 30;
   */
  metadata?: { [key: string]: string };
};

/**
 * Describes the message api.v1.Buyer.
 * Use `create(BuyerSchema)` to create a new message.
 */
export const BuyerSchema: GenMessage<Buyer, BuyerJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 0);

/**
 * MerchantCustomer represents a customer of merchant, associated in Jamm network.
 *
 * @generated from message api.v1.MerchantCustomer
 */
export type MerchantCustomer = Message<"api.v1.MerchantCustomer"> & {
  /**
   * @generated from field: api.v1.Customer customer = 1;
   */
  customer?: Customer;

  /**
   * @generated from field: api.v1.Merchant merchant = 2;
   */
  merchant?: Merchant;
};

/**
 * MerchantCustomer represents a customer of merchant, associated in Jamm network.
 *
 * @generated from message api.v1.MerchantCustomer
 */
export type MerchantCustomerJson = {
  /**
   * @generated from field: api.v1.Customer customer = 1;
   */
  customer?: CustomerJson;

  /**
   * @generated from field: api.v1.Merchant merchant = 2;
   */
  merchant?: MerchantJson;
};

/**
 * Describes the message api.v1.MerchantCustomer.
 * Use `create(MerchantCustomerSchema)` to create a new message.
 */
export const MerchantCustomerSchema: GenMessage<MerchantCustomer, MerchantCustomerJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 1);

/**
 * Customer object.
 *
 * @generated from message api.v1.Customer
 */
export type Customer = Message<"api.v1.Customer"> & {
  /**
   * Customer ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Customer's email address
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * SSOT for the customer if available to be charged, need to consider both contract status and kyc status regarding to force_kyc flag
   *
   * @generated from field: bool activated = 4;
   */
  activated: boolean;

  /**
   * Customer status information
   *
   * @generated from field: api.v1.Status status = 5;
   */
  status?: Status;

  /**
   * Customer bank information
   *
   * @generated from field: api.v1.BankInformation bank_information = 6;
   */
  bankInformation?: BankInformation;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;
};

/**
 * Customer object.
 *
 * @generated from message api.v1.Customer
 */
export type CustomerJson = {
  /**
   * Customer ID
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * Customer's email address
   *
   * @generated from field: string email = 2;
   */
  email?: string;

  /**
   * SSOT for the customer if available to be charged, need to consider both contract status and kyc status regarding to force_kyc flag
   *
   * @generated from field: bool activated = 4;
   */
  activated?: boolean;

  /**
   * Customer status information
   *
   * @generated from field: api.v1.Status status = 5;
   */
  status?: StatusJson;

  /**
   * Customer bank information
   *
   * @generated from field: api.v1.BankInformation bank_information = 6;
   */
  bankInformation?: BankInformationJson;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: TimestampJson;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: TimestampJson;
};

/**
 * Describes the message api.v1.Customer.
 * Use `create(CustomerSchema)` to create a new message.
 */
export const CustomerSchema: GenMessage<Customer, CustomerJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 2);

/**
 * Status information for the customer
 *
 * @generated from message api.v1.Status
 */
export type Status = Message<"api.v1.Status"> & {
  /**
   * Payment authorization status
   *
   * @generated from field: api.v1.PaymentAuthorizationStatus payment = 1;
   */
  payment: PaymentAuthorizationStatus;

  /**
   * KYC verification status
   *
   * @generated from field: api.v1.KycStatus kyc = 2;
   */
  kyc: KycStatus;
};

/**
 * Status information for the customer
 *
 * @generated from message api.v1.Status
 */
export type StatusJson = {
  /**
   * Payment authorization status
   *
   * @generated from field: api.v1.PaymentAuthorizationStatus payment = 1;
   */
  payment?: PaymentAuthorizationStatusJson;

  /**
   * KYC verification status
   *
   * @generated from field: api.v1.KycStatus kyc = 2;
   */
  kyc?: KycStatusJson;
};

/**
 * Describes the message api.v1.Status.
 * Use `create(StatusSchema)` to create a new message.
 */
export const StatusSchema: GenMessage<Status, StatusJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 3);

/**
 * Bank information for the customer
 *
 * @generated from message api.v1.BankInformation
 */
export type BankInformation = Message<"api.v1.BankInformation"> & {
  /**
   * Masked account number
   *
   * @generated from field: string account_number = 1;
   */
  accountNumber: string;

  /**
   * Bank name
   *
   * @generated from field: string bank_name = 2;
   */
  bankName: string;

  /**
   * Branch name
   *
   * @generated from field: string branch_name = 3;
   */
  branchName: string;

  /**
   * Bank account type (savings or checking)
   * 口座種別（普通または当座）
   *
   * @generated from field: api.v1.DepositType deposit_type = 4;
   */
  depositType: DepositType;
};

/**
 * Bank information for the customer
 *
 * @generated from message api.v1.BankInformation
 */
export type BankInformationJson = {
  /**
   * Masked account number
   *
   * @generated from field: string account_number = 1;
   */
  accountNumber?: string;

  /**
   * Bank name
   *
   * @generated from field: string bank_name = 2;
   */
  bankName?: string;

  /**
   * Branch name
   *
   * @generated from field: string branch_name = 3;
   */
  branchName?: string;

  /**
   * Bank account type (savings or checking)
   * 口座種別（普通または当座）
   *
   * @generated from field: api.v1.DepositType deposit_type = 4;
   */
  depositType?: DepositTypeJson;
};

/**
 * Describes the message api.v1.BankInformation.
 * Use `create(BankInformationSchema)` to create a new message.
 */
export const BankInformationSchema: GenMessage<BankInformation, BankInformationJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 4);

/**
 * @generated from message api.v1.Merchant
 */
export type Merchant = Message<"api.v1.Merchant"> & {
  /**
   * Merchant ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Merchant name
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * @generated from message api.v1.Merchant
 */
export type MerchantJson = {
  /**
   * Merchant ID
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * Merchant name
   *
   * @generated from field: string name = 2;
   */
  name?: string;
};

/**
 * Describes the message api.v1.Merchant.
 * Use `create(MerchantSchema)` to create a new message.
 */
export const MerchantSchema: GenMessage<Merchant, MerchantJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 5);

/**
 * Contract represents a payment agreement between the Jamm customer and the merchant.
 * Merchant must use the contract ID to further make a charge, therefore please persist
 * this ID into your database.
 *
 * 契約はJammの顧客とショップの間の支払い契約を表します。
 * ショップは契約IDを使用して決済を行う必要がありますので、このIDはデータベースに保存してください。
 *
 * @generated from message api.v1.Contract
 */
export type Contract = Message<"api.v1.Contract"> & {
  /**
   * Contract ID (e.g. con-1234567890)
   *
   * 契約ID (例: con-1234567890)
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Status of the contract.
   *
   * @generated from field: api.v1.ContractStatus status = 2;
   */
  status: ContractStatus;

  /**
   * Created date of the contract.
   *
   * 契約の作成日時。
   *
   * @generated from field: google.protobuf.Timestamp created_at = 20;
   */
  createdAt?: Timestamp;

  /**
   * Updated date of the contract.
   *
   * 契約の更新日時。
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 21;
   */
  updatedAt?: Timestamp;
};

/**
 * Contract represents a payment agreement between the Jamm customer and the merchant.
 * Merchant must use the contract ID to further make a charge, therefore please persist
 * this ID into your database.
 *
 * 契約はJammの顧客とショップの間の支払い契約を表します。
 * ショップは契約IDを使用して決済を行う必要がありますので、このIDはデータベースに保存してください。
 *
 * @generated from message api.v1.Contract
 */
export type ContractJson = {
  /**
   * Contract ID (e.g. con-1234567890)
   *
   * 契約ID (例: con-1234567890)
   *
   * @gotags: validate:"required"
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * Status of the contract.
   *
   * @generated from field: api.v1.ContractStatus status = 2;
   */
  status?: ContractStatusJson;

  /**
   * Created date of the contract.
   *
   * 契約の作成日時。
   *
   * @generated from field: google.protobuf.Timestamp created_at = 20;
   */
  createdAt?: TimestampJson;

  /**
   * Updated date of the contract.
   *
   * 契約の更新日時。
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 21;
   */
  updatedAt?: TimestampJson;
};

/**
 * Describes the message api.v1.Contract.
 * Use `create(ContractSchema)` to create a new message.
 */
export const ContractSchema: GenMessage<Contract, ContractJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 6);

/**
 * @generated from message api.v1.Pagination
 */
export type Pagination = Message<"api.v1.Pagination"> & {
  /**
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * @generated from message api.v1.Pagination
 */
export type PaginationJson = {
  /**
   * @generated from field: int32 page_size = 1;
   */
  pageSize?: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken?: string;
};

/**
 * Describes the message api.v1.Pagination.
 * Use `create(PaginationSchema)` to create a new message.
 */
export const PaginationSchema: GenMessage<Pagination, PaginationJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 7);

/**
 * @generated from message api.v1.Bank
 */
export type Bank = Message<"api.v1.Bank"> & {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * Official name of the bank, e.g. "みずほ銀行"
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Katakana name of the bank, e.g. "ミズホギンコウ"
   *
   * @generated from field: string name_katakana = 3;
   */
  nameKatakana: string;

  /**
   * Hiragana name of the bank, e.g. "みずほぎんこう"
   *
   * @generated from field: string name_hiragana = 4;
   */
  nameHiragana: string;

  /**
   * Alphabet name of the bank, e.g. "Mizuho Bank"
   *
   * @generated from field: string name_alphabet = 5;
   */
  nameAlphabet: string;

  /**
   * Contains bank brand assets and metadata (e.g. Terms URL and Logo)
   *
   * @generated from field: api.v1.BankAssets assets = 11;
   */
  assets?: BankAssets;

  /**
   * Quota of the bank.
   *
   * @generated from field: api.v1.BankQuota quota = 20;
   */
  quota?: BankQuota;

  /**
   * @generated from field: string opening_hours = 30;
   */
  openingHours: string;

  /**
   * @generated from field: repeated api.v1.BankScheduledMaintenancePeriod bankpay_scheduled_maintenances = 40;
   */
  bankpayScheduledMaintenances: BankScheduledMaintenancePeriod[];

  /**
   * @generated from field: repeated api.v1.BankScheduledMaintenancePeriod bank_scheduled_maintenances = 41;
   */
  bankScheduledMaintenances: BankScheduledMaintenancePeriod[];

  /**
   * @generated from field: repeated api.v1.BankScheduledMaintenancePeriod registration_scheduled_maintenances = 42;
   */
  registrationScheduledMaintenances: BankScheduledMaintenancePeriod[];

  /**
   * True when Bankpay is currently available.
   *
   * @generated from field: bool bankpay_available = 50;
   */
  bankpayAvailable: boolean;

  /**
   * True when Bank is currently available.
   *
   * @generated from field: bool bank_available = 51;
   */
  bankAvailable: boolean;

  /**
   * True when registration is currently available.
   *
   * @generated from field: bool registration_available = 52;
   */
  registrationAvailable: boolean;

  /**
   * True when bank is operating, false when its not.
   * Core UI is expected to navigate user to out-of-service page when this flag is set to false.
   *
   * See Figma for more information:
   * https://www.figma.com/design/7cabcqjzvKl9IwzvJCuQEW/Jamm-%CE%B2-UI-design?node-id=304-11253&t=oyEUrdVtFOMV9xut-4
   *
   * @generated from field: bool operating = 99;
   */
  operating: boolean;
};

/**
 * @generated from message api.v1.Bank
 */
export type BankJson = {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string code = 1;
   */
  code?: string;

  /**
   * Official name of the bank, e.g. "みずほ銀行"
   *
   * @generated from field: string name = 2;
   */
  name?: string;

  /**
   * Katakana name of the bank, e.g. "ミズホギンコウ"
   *
   * @generated from field: string name_katakana = 3;
   */
  nameKatakana?: string;

  /**
   * Hiragana name of the bank, e.g. "みずほぎんこう"
   *
   * @generated from field: string name_hiragana = 4;
   */
  nameHiragana?: string;

  /**
   * Alphabet name of the bank, e.g. "Mizuho Bank"
   *
   * @generated from field: string name_alphabet = 5;
   */
  nameAlphabet?: string;

  /**
   * Contains bank brand assets and metadata (e.g. Terms URL and Logo)
   *
   * @generated from field: api.v1.BankAssets assets = 11;
   */
  assets?: BankAssetsJson;

  /**
   * Quota of the bank.
   *
   * @generated from field: api.v1.BankQuota quota = 20;
   */
  quota?: BankQuotaJson;

  /**
   * @generated from field: string opening_hours = 30;
   */
  openingHours?: string;

  /**
   * @generated from field: repeated api.v1.BankScheduledMaintenancePeriod bankpay_scheduled_maintenances = 40;
   */
  bankpayScheduledMaintenances?: BankScheduledMaintenancePeriodJson[];

  /**
   * @generated from field: repeated api.v1.BankScheduledMaintenancePeriod bank_scheduled_maintenances = 41;
   */
  bankScheduledMaintenances?: BankScheduledMaintenancePeriodJson[];

  /**
   * @generated from field: repeated api.v1.BankScheduledMaintenancePeriod registration_scheduled_maintenances = 42;
   */
  registrationScheduledMaintenances?: BankScheduledMaintenancePeriodJson[];

  /**
   * True when Bankpay is currently available.
   *
   * @generated from field: bool bankpay_available = 50;
   */
  bankpayAvailable?: boolean;

  /**
   * True when Bank is currently available.
   *
   * @generated from field: bool bank_available = 51;
   */
  bankAvailable?: boolean;

  /**
   * True when registration is currently available.
   *
   * @generated from field: bool registration_available = 52;
   */
  registrationAvailable?: boolean;

  /**
   * True when bank is operating, false when its not.
   * Core UI is expected to navigate user to out-of-service page when this flag is set to false.
   *
   * See Figma for more information:
   * https://www.figma.com/design/7cabcqjzvKl9IwzvJCuQEW/Jamm-%CE%B2-UI-design?node-id=304-11253&t=oyEUrdVtFOMV9xut-4
   *
   * @generated from field: bool operating = 99;
   */
  operating?: boolean;
};

/**
 * Describes the message api.v1.Bank.
 * Use `create(BankSchema)` to create a new message.
 */
export const BankSchema: GenMessage<Bank, BankJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 8);

/**
 * BankQuota represents quota of a bank.
 * This message originates from business contract between Jamm and Banks, and it does not contain
 * any customer context (e.g. how much amount can customer pay when they already made purchase within a day)
 *
 * See Google Spreadsheet for more information:
 * https://docs.google.com/spreadsheets/d/1sxklqXzTGt-E7FgXB801d12Az8pbpZgs/edit?gid=1684227518#gid=1684227518
 *
 * @generated from message api.v1.BankQuota
 */
export type BankQuota = Message<"api.v1.BankQuota"> & {
  /**
   * Maximum amount of money that can be transferred in a single transaction, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_charge_with_kyc = 1;
   */
  offlinePurchaseLimitPerChargeWithKyc: number;

  /**
   * Maximum amount of money that can be transferred in a single transaction, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_charge_without_kyc = 2;
   */
  offlinePurchaseLimitPerChargeWithoutKyc: number;

  /**
   * Maximum amount of money that can be transferred in a single day, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_day_with_kyc = 10;
   */
  offlinePurchaseLimitPerDayWithKyc: number;

  /**
   * Maximum amount of money that can be transferred in a single day, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_day_without_kyc = 11;
   */
  offlinePurchaseLimitPerDayWithoutKyc: number;

  /**
   * Maximum amount of money that can be transferred in a subscription transaction, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_charge_with_kyc = 20;
   */
  subscriptionPurchaseLimitPerChargeWithKyc: number;

  /**
   * Maximum amount of money that can be transferred in a subscription transaction, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_charge_without_kyc = 21;
   */
  subscriptionPurchaseLimitPerChargeWithoutKyc: number;

  /**
   * Maximum amount of money that can be transferred in a single day in subscription transactions, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_day_with_kyc = 30;
   */
  subscriptionPurchaseLimitPerDayWithKyc: number;

  /**
   * Maximum amount of money that can be transferred in a single day in subscription transactions, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_day_without_kyc = 31;
   */
  subscriptionPurchaseLimitPerDayWithoutKyc: number;
};

/**
 * BankQuota represents quota of a bank.
 * This message originates from business contract between Jamm and Banks, and it does not contain
 * any customer context (e.g. how much amount can customer pay when they already made purchase within a day)
 *
 * See Google Spreadsheet for more information:
 * https://docs.google.com/spreadsheets/d/1sxklqXzTGt-E7FgXB801d12Az8pbpZgs/edit?gid=1684227518#gid=1684227518
 *
 * @generated from message api.v1.BankQuota
 */
export type BankQuotaJson = {
  /**
   * Maximum amount of money that can be transferred in a single transaction, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_charge_with_kyc = 1;
   */
  offlinePurchaseLimitPerChargeWithKyc?: number;

  /**
   * Maximum amount of money that can be transferred in a single transaction, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_charge_without_kyc = 2;
   */
  offlinePurchaseLimitPerChargeWithoutKyc?: number;

  /**
   * Maximum amount of money that can be transferred in a single day, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_day_with_kyc = 10;
   */
  offlinePurchaseLimitPerDayWithKyc?: number;

  /**
   * Maximum amount of money that can be transferred in a single day, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=02 (非対面都度決済)
   *
   * @generated from field: int32 offline_purchase_limit_per_day_without_kyc = 11;
   */
  offlinePurchaseLimitPerDayWithoutKyc?: number;

  /**
   * Maximum amount of money that can be transferred in a subscription transaction, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_charge_with_kyc = 20;
   */
  subscriptionPurchaseLimitPerChargeWithKyc?: number;

  /**
   * Maximum amount of money that can be transferred in a subscription transaction, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_charge_without_kyc = 21;
   */
  subscriptionPurchaseLimitPerChargeWithoutKyc?: number;

  /**
   * Maximum amount of money that can be transferred in a single day in subscription transactions, when customer has completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_day_with_kyc = 30;
   */
  subscriptionPurchaseLimitPerDayWithKyc?: number;

  /**
   * Maximum amount of money that can be transferred in a single day in subscription transactions, when customer has not completed KYC.
   * Corresponds to Bankpay PaymentType=03 (継続課金)
   *
   * @generated from field: int32 subscription_purchase_limit_per_day_without_kyc = 31;
   */
  subscriptionPurchaseLimitPerDayWithoutKyc?: number;
};

/**
 * Describes the message api.v1.BankQuota.
 * Use `create(BankQuotaSchema)` to create a new message.
 */
export const BankQuotaSchema: GenMessage<BankQuota, BankQuotaJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 9);

/**
 * @generated from message api.v1.BankScheduledMaintenancePeriod
 */
export type BankScheduledMaintenancePeriod = Message<"api.v1.BankScheduledMaintenancePeriod"> & {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string bank_code = 1;
   */
  bankCode: string;

  /**
   * Scheduled maintenance start time in JST, e.g. "2021-01-01T00:00:00"
   *
   * @generated from field: string start_at_jst = 2;
   */
  startAtJst: string;

  /**
   * Scheduled maintenance end time in JST, e.g. "2021-01-01T00:00:00"
   *
   * @generated from field: string end_at_jst = 3;
   */
  endAtJst: string;

  /**
   * Scheduled maintenance start time in UTC, e.g. "2021-01-01T00:00:00Z"
   *
   * @generated from field: string start_at_utc = 4;
   */
  startAtUtc: string;

  /**
   * Scheduled maintenance end time in UTC, e.g. "2021-01-01T00:00:00Z"
   *
   * @generated from field: string end_at_utc = 5;
   */
  endAtUtc: string;
};

/**
 * @generated from message api.v1.BankScheduledMaintenancePeriod
 */
export type BankScheduledMaintenancePeriodJson = {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string bank_code = 1;
   */
  bankCode?: string;

  /**
   * Scheduled maintenance start time in JST, e.g. "2021-01-01T00:00:00"
   *
   * @generated from field: string start_at_jst = 2;
   */
  startAtJst?: string;

  /**
   * Scheduled maintenance end time in JST, e.g. "2021-01-01T00:00:00"
   *
   * @generated from field: string end_at_jst = 3;
   */
  endAtJst?: string;

  /**
   * Scheduled maintenance start time in UTC, e.g. "2021-01-01T00:00:00Z"
   *
   * @generated from field: string start_at_utc = 4;
   */
  startAtUtc?: string;

  /**
   * Scheduled maintenance end time in UTC, e.g. "2021-01-01T00:00:00Z"
   *
   * @generated from field: string end_at_utc = 5;
   */
  endAtUtc?: string;
};

/**
 * Describes the message api.v1.BankScheduledMaintenancePeriod.
 * Use `create(BankScheduledMaintenancePeriodSchema)` to create a new message.
 */
export const BankScheduledMaintenancePeriodSchema: GenMessage<BankScheduledMaintenancePeriod, BankScheduledMaintenancePeriodJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 10);

/**
 * @generated from message api.v1.BankBranch
 */
export type BankBranch = Message<"api.v1.BankBranch"> & {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string bank_code = 1;
   */
  bankCode: string;

  /**
   * Branch code, e.g. "001"
   *
   * @generated from field: string branch_code = 2;
   */
  branchCode: string;

  /**
   * Official name of the branch, e.g. "東京支店"
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Katakana name of the branch, e.g. "トウキョウシテン"
   *
   * @generated from field: string name_katakana = 4;
   */
  nameKatakana: string;

  /**
   * Hiragana name of the branch, e.g. "とうきょうしてん"
   *
   * @generated from field: string name_hiragana = 5;
   */
  nameHiragana: string;

  /**
   * Alphabet name of the branch, e.g. "Tokyo Branch"
   *
   * @generated from field: string name_alphabet = 6;
   */
  nameAlphabet: string;
};

/**
 * @generated from message api.v1.BankBranch
 */
export type BankBranchJson = {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string bank_code = 1;
   */
  bankCode?: string;

  /**
   * Branch code, e.g. "001"
   *
   * @generated from field: string branch_code = 2;
   */
  branchCode?: string;

  /**
   * Official name of the branch, e.g. "東京支店"
   *
   * @generated from field: string name = 3;
   */
  name?: string;

  /**
   * Katakana name of the branch, e.g. "トウキョウシテン"
   *
   * @generated from field: string name_katakana = 4;
   */
  nameKatakana?: string;

  /**
   * Hiragana name of the branch, e.g. "とうきょうしてん"
   *
   * @generated from field: string name_hiragana = 5;
   */
  nameHiragana?: string;

  /**
   * Alphabet name of the branch, e.g. "Tokyo Branch"
   *
   * @generated from field: string name_alphabet = 6;
   */
  nameAlphabet?: string;
};

/**
 * Describes the message api.v1.BankBranch.
 * Use `create(BankBranchSchema)` to create a new message.
 */
export const BankBranchSchema: GenMessage<BankBranch, BankBranchJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 11);

/**
 * @generated from message api.v1.BankAssets
 */
export type BankAssets = Message<"api.v1.BankAssets"> & {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string bank_code = 1;
   */
  bankCode: string;

  /**
   * URL to the bank logo in small size.
   * Fallback to default placeholder if bank logo is not available.
   * The image format is web/iOS/Android compatible.
   *
   * @generated from field: string logo_url_large = 2;
   */
  logoUrlLarge: string;

  /**
   * URL to the bank logo in medium size.
   * Fallback to default placeholder if bank logo is not available.
   * The image format is web/iOS/Android compatible.
   *
   * @generated from field: string logo_url_medium = 3;
   */
  logoUrlMedium: string;

  /**
   * Contains URL to the terms of service of the bank.
   *
   * See Figma for more information:
   * https://www.figma.com/design/7cabcqjzvKl9IwzvJCuQEW/Jamm-%CE%B2-UI-design?node-id=174-10898&t=oyEUrdVtFOMV9xut-4
   *
   * @generated from field: string terms_url = 10;
   */
  termsUrl: string;
};

/**
 * @generated from message api.v1.BankAssets
 */
export type BankAssetsJson = {
  /**
   * Bank code, e.g. "0001"
   *
   * @generated from field: string bank_code = 1;
   */
  bankCode?: string;

  /**
   * URL to the bank logo in small size.
   * Fallback to default placeholder if bank logo is not available.
   * The image format is web/iOS/Android compatible.
   *
   * @generated from field: string logo_url_large = 2;
   */
  logoUrlLarge?: string;

  /**
   * URL to the bank logo in medium size.
   * Fallback to default placeholder if bank logo is not available.
   * The image format is web/iOS/Android compatible.
   *
   * @generated from field: string logo_url_medium = 3;
   */
  logoUrlMedium?: string;

  /**
   * Contains URL to the terms of service of the bank.
   *
   * See Figma for more information:
   * https://www.figma.com/design/7cabcqjzvKl9IwzvJCuQEW/Jamm-%CE%B2-UI-design?node-id=174-10898&t=oyEUrdVtFOMV9xut-4
   *
   * @generated from field: string terms_url = 10;
   */
  termsUrl?: string;
};

/**
 * Describes the message api.v1.BankAssets.
 * Use `create(BankAssetsSchema)` to create a new message.
 */
export const BankAssetsSchema: GenMessage<BankAssets, BankAssetsJson> = /*@__PURE__*/
  messageDesc(file_api_v1_common, 12);

/**
 * Enum for bank deposit type
 *
 * @generated from enum api.v1.DepositType
 */
export enum DepositType {
  /**
   * @generated from enum value: DEPOSIT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 普通
   *
   * @generated from enum value: DEPOSIT_TYPE_SAVINGS = 1;
   */
  SAVINGS = 1,

  /**
   * 当座
   *
   * @generated from enum value: DEPOSIT_TYPE_CHECKING = 2;
   */
  CHECKING = 2,
}

/**
 * Enum for bank deposit type
 *
 * @generated from enum api.v1.DepositType
 */
export type DepositTypeJson = "DEPOSIT_TYPE_UNSPECIFIED" | "DEPOSIT_TYPE_SAVINGS" | "DEPOSIT_TYPE_CHECKING";

/**
 * Describes the enum api.v1.DepositType.
 */
export const DepositTypeSchema: GenEnum<DepositType, DepositTypeJson> = /*@__PURE__*/
  enumDesc(file_api_v1_common, 0);

/**
 * Enum for payment authorization status
 *
 * @generated from enum api.v1.PaymentAuthorizationStatus
 */
export enum PaymentAuthorizationStatus {
  /**
   * @generated from enum value: PAYMENT_AUTHORIZATION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PAYMENT_AUTHORIZATION_STATUS_AUTHORIZED = 1;
   */
  AUTHORIZED = 1,

  /**
   * @generated from enum value: PAYMENT_AUTHORIZATION_STATUS_NOT_AUTHORIZED = 2;
   */
  NOT_AUTHORIZED = 2,
}

/**
 * Enum for payment authorization status
 *
 * @generated from enum api.v1.PaymentAuthorizationStatus
 */
export type PaymentAuthorizationStatusJson = "PAYMENT_AUTHORIZATION_STATUS_UNSPECIFIED" | "PAYMENT_AUTHORIZATION_STATUS_AUTHORIZED" | "PAYMENT_AUTHORIZATION_STATUS_NOT_AUTHORIZED";

/**
 * Describes the enum api.v1.PaymentAuthorizationStatus.
 */
export const PaymentAuthorizationStatusSchema: GenEnum<PaymentAuthorizationStatus, PaymentAuthorizationStatusJson> = /*@__PURE__*/
  enumDesc(file_api_v1_common, 1);

/**
 * Enum for KYC verification status
 *
 * @generated from enum api.v1.KycStatus
 */
export enum KycStatus {
  /**
   * @generated from enum value: KYC_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: KYC_STATUS_APPROVED = 1;
   */
  APPROVED = 1,

  /**
   * @generated from enum value: KYC_STATUS_NOT_SUBMITTED = 2;
   */
  NOT_SUBMITTED = 2,

  /**
   * @generated from enum value: KYC_STATUS_IN_REVIEW = 3;
   */
  IN_REVIEW = 3,

  /**
   * @generated from enum value: KYC_STATUS_DENIED = 4;
   */
  DENIED = 4,
}

/**
 * Enum for KYC verification status
 *
 * @generated from enum api.v1.KycStatus
 */
export type KycStatusJson = "KYC_STATUS_UNSPECIFIED" | "KYC_STATUS_APPROVED" | "KYC_STATUS_NOT_SUBMITTED" | "KYC_STATUS_IN_REVIEW" | "KYC_STATUS_DENIED";

/**
 * Describes the enum api.v1.KycStatus.
 */
export const KycStatusSchema: GenEnum<KycStatus, KycStatusJson> = /*@__PURE__*/
  enumDesc(file_api_v1_common, 2);

/**
 * @generated from enum api.v1.ContractStatus
 */
export enum ContractStatus {
  /**
   * @generated from enum value: CONTRACT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONTRACT_STATUS_INITIAL = 1;
   */
  INITIAL = 1,

  /**
   * @generated from enum value: CONTRACT_STATUS_APPROVED = 2;
   */
  APPROVED = 2,

  /**
   * @generated from enum value: CONTRACT_STATUS_ACTIVATED = 3;
   */
  ACTIVATED = 3,

  /**
   * @generated from enum value: CONTRACT_STATUS_WAITING_EKYC = 4;
   */
  WAITING_EKYC = 4,

  /**
   * @generated from enum value: CONTRACT_STATUS_EXPIRED = 5;
   */
  EXPIRED = 5,

  /**
   * @generated from enum value: CONTRACT_STATUS_DEACTIVATED = 6;
   */
  DEACTIVATED = 6,

  /**
   * @generated from enum value: CONTRACT_STATUS_CANCELLED = 7;
   */
  CANCELLED = 7,

  /**
   * @generated from enum value: CONTRACT_STATUS_PENDING_CHARGE = 8;
   */
  PENDING_CHARGE = 8,
}

/**
 * @generated from enum api.v1.ContractStatus
 */
export type ContractStatusJson = "CONTRACT_STATUS_UNSPECIFIED" | "CONTRACT_STATUS_INITIAL" | "CONTRACT_STATUS_APPROVED" | "CONTRACT_STATUS_ACTIVATED" | "CONTRACT_STATUS_WAITING_EKYC" | "CONTRACT_STATUS_EXPIRED" | "CONTRACT_STATUS_DEACTIVATED" | "CONTRACT_STATUS_CANCELLED" | "CONTRACT_STATUS_PENDING_CHARGE";

/**
 * Describes the enum api.v1.ContractStatus.
 */
export const ContractStatusSchema: GenEnum<ContractStatus, ContractStatusJson> = /*@__PURE__*/
  enumDesc(file_api_v1_common, 3);

