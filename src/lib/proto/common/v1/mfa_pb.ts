// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,json_types=true"
// @generated from file common/v1/mfa.proto (package common.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file common/v1/mfa.proto.
 */
export const file_common_v1_mfa: GenFile = /*@__PURE__*/
  fileDesc("ChNjb21tb24vdjEvbWZhLnByb3RvEgljb21tb24udjEiUwoeSW5pdGlhdGVTbXNWZXJpZmljYXRpb25SZXF1ZXN0EjEKDHBob25lX251bWJlchgBIAEoCUIbukgYchYyEV4wWzc4OV0wWzAtOV17OH0kmAELIpMCCh9Jbml0aWF0ZVNtc1ZlcmlmaWNhdGlvblJlc3BvbnNlEhoKEmV4cGlyZXNfaW5fc2Vjb25kcxgBIAEoBRIcChRyZXNlbmRfZGVsYXlfc2Vjb25kcxgCIAEoBRI1CgplcnJvcl90eXBlGAMgASgOMhwuY29tbW9uLnYxLkluaXRpYXRlRXJyb3JUeXBlSACIAQESJAoNZXJyb3JfbWVzc2FnZRgEIAEoCUIIukgFcgMY9ANIAYgBARIgChNyZXRyeV9hZnRlcl9zZWNvbmRzGAUgASgFSAKIAQFCDQoLX2Vycm9yX3R5cGVCEAoOX2Vycm9yX21lc3NhZ2VCFgoUX3JldHJ5X2FmdGVyX3NlY29uZHMiHgocUmVzZW5kU21zVmVyaWZpY2F0aW9uUmVxdWVzdCKPAgodUmVzZW5kU21zVmVyaWZpY2F0aW9uUmVzcG9uc2USGgoSZXhwaXJlc19pbl9zZWNvbmRzGAEgASgFEhwKFHJlc2VuZF9kZWxheV9zZWNvbmRzGAIgASgFEjMKCmVycm9yX3R5cGUYAyABKA4yGi5jb21tb24udjEuUmVzZW5kRXJyb3JUeXBlSACIAQESJAoNZXJyb3JfbWVzc2FnZRgEIAEoCUIIukgFcgMY9ANIAYgBARIgChNyZXRyeV9hZnRlcl9zZWNvbmRzGAUgASgFSAKIAQFCDQoLX2Vycm9yX3R5cGVCEAoOX2Vycm9yX21lc3NhZ2VCFgoUX3JldHJ5X2FmdGVyX3NlY29uZHMiOAoTVmVyaWZ5U21zT3RwUmVxdWVzdBIhCgNvdHAYASABKAlCFLpIEXIPMgpeWzAtOV17Nn0kmAEGIsABChRWZXJpZnlTbXNPdHBSZXNwb25zZRIQCgh2ZXJpZmllZBgBIAEoCBIzCgplcnJvcl90eXBlGAIgASgOMhouY29tbW9uLnYxLlZlcmlmeUVycm9yVHlwZUgAiAEBEiQKDWVycm9yX21lc3NhZ2UYAyABKAlCCLpIBXIDGPQDSAGIAQESGgoSYXR0ZW1wdHNfcmVtYWluaW5nGAQgASgFQg0KC19lcnJvcl90eXBlQhAKDl9lcnJvcl9tZXNzYWdlKoUCChFJbml0aWF0ZUVycm9yVHlwZRIjCh9JTklUSUFURV9FUlJPUl9UWVBFX1VOU1BFQ0lGSUVEEAASJAogSU5JVElBVEVfRVJST1JfVFlQRV9SQVRFX0xJTUlURUQQARIlCiFJTklUSUFURV9FUlJPUl9UWVBFX0lOVkFMSURfUEhPTkUQAhIrCidJTklUSUFURV9FUlJPUl9UWVBFX1NFUlZJQ0VfVU5BVkFJTEFCTEUQAxInCiNJTklUSUFURV9FUlJPUl9UWVBFX0lOVkFMSURfU0VTU0lPThAEEigKJElOSVRJQVRFX0VSUk9SX1RZUEVfQUxSRUFEWV9WRVJJRklFRBAFKvkBCg9SZXNlbmRFcnJvclR5cGUSIQodUkVTRU5EX0VSUk9SX1RZUEVfVU5TUEVDSUZJRUQQABIeChpSRVNFTkRfRVJST1JfVFlQRV9UT09fU09PThABEiUKIVJFU0VORF9FUlJPUl9UWVBFX0lOVkFMSURfU0VTU0lPThACEiIKHlJFU0VORF9FUlJPUl9UWVBFX01BWF9BVFRFTVBUUxADEi0KKVJFU0VORF9FUlJPUl9UWVBFX05PX1BFTkRJTkdfVkVSSUZJQ0FUSU9OEAQSKQolUkVTRU5EX0VSUk9SX1RZUEVfU0VSVklDRV9VTkFWQUlMQUJMRRAFKvABCg9WZXJpZnlFcnJvclR5cGUSIQodVkVSSUZZX0VSUk9SX1RZUEVfVU5TUEVDSUZJRUQQABIhCh1WRVJJRllfRVJST1JfVFlQRV9JTlZBTElEX09UUBABEh0KGVZFUklGWV9FUlJPUl9UWVBFX0VYUElSRUQQAhIiCh5WRVJJRllfRVJST1JfVFlQRV9NQVhfQVRURU1QVFMQAxIlCiFWRVJJRllfRVJST1JfVFlQRV9JTlZBTElEX1NFU1NJT04QBBItCilWRVJJRllfRVJST1JfVFlQRV9OT19QRU5ESU5HX1ZFUklGSUNBVElPThAFMrsCCgpNRkFTZXJ2aWNlEnAKF0luaXRpYXRlU21zVmVyaWZpY2F0aW9uEikuY29tbW9uLnYxLkluaXRpYXRlU21zVmVyaWZpY2F0aW9uUmVxdWVzdBoqLmNvbW1vbi52MS5Jbml0aWF0ZVNtc1ZlcmlmaWNhdGlvblJlc3BvbnNlEmoKFVJlc2VuZFNtc1ZlcmlmaWNhdGlvbhInLmNvbW1vbi52MS5SZXNlbmRTbXNWZXJpZmljYXRpb25SZXF1ZXN0GiguY29tbW9uLnYxLlJlc2VuZFNtc1ZlcmlmaWNhdGlvblJlc3BvbnNlEk8KDFZlcmlmeVNtc090cBIeLmNvbW1vbi52MS5WZXJpZnlTbXNPdHBSZXF1ZXN0Gh8uY29tbW9uLnYxLlZlcmlmeVNtc090cFJlc3BvbnNlQoEBCg1jb20uY29tbW9uLnYxQghNZmFQcm90b1ABWiFhcGkvcHJvdG8vZ2VuL2NvbW1vbi92MTtjb21tb25fdjGiAgNDWFiqAglDb21tb24uVjHKAglDb21tb25cVjHiAhVDb21tb25cVjFcR1BCTWV0YWRhdGHqAgpDb21tb246OlYxYgZwcm90bzM", [file_buf_validate_validate]);

/**
 * @generated from message common.v1.InitiateSmsVerificationRequest
 */
export type InitiateSmsVerificationRequest = Message<"common.v1.InitiateSmsVerificationRequest"> & {
  /**
   * @generated from field: string phone_number = 1;
   */
  phoneNumber: string;
};

/**
 * @generated from message common.v1.InitiateSmsVerificationRequest
 */
export type InitiateSmsVerificationRequestJson = {
  /**
   * @generated from field: string phone_number = 1;
   */
  phoneNumber?: string;
};

/**
 * Describes the message common.v1.InitiateSmsVerificationRequest.
 * Use `create(InitiateSmsVerificationRequestSchema)` to create a new message.
 */
export const InitiateSmsVerificationRequestSchema: GenMessage<InitiateSmsVerificationRequest, InitiateSmsVerificationRequestJson> = /*@__PURE__*/
  messageDesc(file_common_v1_mfa, 0);

/**
 * @generated from message common.v1.InitiateSmsVerificationResponse
 */
export type InitiateSmsVerificationResponse = Message<"common.v1.InitiateSmsVerificationResponse"> & {
  /**
   * OTP expiry time in seconds (typically 300 = 5 minutes)
   *
   * @generated from field: int32 expires_in_seconds = 1;
   */
  expiresInSeconds: number;

  /**
   * Minimum wait time before resend is allowed
   *
   * @generated from field: int32 resend_delay_seconds = 2;
   */
  resendDelaySeconds: number;

  /**
   * Error info (only exists on error)
   *
   * @generated from field: optional common.v1.InitiateErrorType error_type = 3;
   */
  errorType?: InitiateErrorType;

  /**
   * @generated from field: optional string error_message = 4;
   */
  errorMessage?: string;

  /**
   * Rate limit cooldown in seconds (matches Core behavior)
   *
   * @generated from field: optional int32 retry_after_seconds = 5;
   */
  retryAfterSeconds?: number;
};

/**
 * @generated from message common.v1.InitiateSmsVerificationResponse
 */
export type InitiateSmsVerificationResponseJson = {
  /**
   * OTP expiry time in seconds (typically 300 = 5 minutes)
   *
   * @generated from field: int32 expires_in_seconds = 1;
   */
  expiresInSeconds?: number;

  /**
   * Minimum wait time before resend is allowed
   *
   * @generated from field: int32 resend_delay_seconds = 2;
   */
  resendDelaySeconds?: number;

  /**
   * Error info (only exists on error)
   *
   * @generated from field: optional common.v1.InitiateErrorType error_type = 3;
   */
  errorType?: InitiateErrorTypeJson;

  /**
   * @generated from field: optional string error_message = 4;
   */
  errorMessage?: string;

  /**
   * Rate limit cooldown in seconds (matches Core behavior)
   *
   * @generated from field: optional int32 retry_after_seconds = 5;
   */
  retryAfterSeconds?: number;
};

/**
 * Describes the message common.v1.InitiateSmsVerificationResponse.
 * Use `create(InitiateSmsVerificationResponseSchema)` to create a new message.
 */
export const InitiateSmsVerificationResponseSchema: GenMessage<InitiateSmsVerificationResponse, InitiateSmsVerificationResponseJson> = /*@__PURE__*/
  messageDesc(file_common_v1_mfa, 1);

/**
 * phone number, etc comes from registration session cookie
 *
 * @generated from message common.v1.ResendSmsVerificationRequest
 */
export type ResendSmsVerificationRequest = Message<"common.v1.ResendSmsVerificationRequest"> & {
};

/**
 * phone number, etc comes from registration session cookie
 *
 * @generated from message common.v1.ResendSmsVerificationRequest
 */
export type ResendSmsVerificationRequestJson = {
};

/**
 * Describes the message common.v1.ResendSmsVerificationRequest.
 * Use `create(ResendSmsVerificationRequestSchema)` to create a new message.
 */
export const ResendSmsVerificationRequestSchema: GenMessage<ResendSmsVerificationRequest, ResendSmsVerificationRequestJson> = /*@__PURE__*/
  messageDesc(file_common_v1_mfa, 2);

/**
 * @generated from message common.v1.ResendSmsVerificationResponse
 */
export type ResendSmsVerificationResponse = Message<"common.v1.ResendSmsVerificationResponse"> & {
  /**
   * OTP expiry time in seconds
   *
   * @generated from field: int32 expires_in_seconds = 1;
   */
  expiresInSeconds: number;

  /**
   * Time before next resend allowed
   *
   * @generated from field: int32 resend_delay_seconds = 2;
   */
  resendDelaySeconds: number;

  /**
   * Error info (only exists on error)
   *
   * @generated from field: optional common.v1.ResendErrorType error_type = 3;
   */
  errorType?: ResendErrorType;

  /**
   * @generated from field: optional string error_message = 4;
   */
  errorMessage?: string;

  /**
   * Cooldown time in seconds (set for rate limiting (matches Core behavior))
   *
   * @generated from field: optional int32 retry_after_seconds = 5;
   */
  retryAfterSeconds?: number;
};

/**
 * @generated from message common.v1.ResendSmsVerificationResponse
 */
export type ResendSmsVerificationResponseJson = {
  /**
   * OTP expiry time in seconds
   *
   * @generated from field: int32 expires_in_seconds = 1;
   */
  expiresInSeconds?: number;

  /**
   * Time before next resend allowed
   *
   * @generated from field: int32 resend_delay_seconds = 2;
   */
  resendDelaySeconds?: number;

  /**
   * Error info (only exists on error)
   *
   * @generated from field: optional common.v1.ResendErrorType error_type = 3;
   */
  errorType?: ResendErrorTypeJson;

  /**
   * @generated from field: optional string error_message = 4;
   */
  errorMessage?: string;

  /**
   * Cooldown time in seconds (set for rate limiting (matches Core behavior))
   *
   * @generated from field: optional int32 retry_after_seconds = 5;
   */
  retryAfterSeconds?: number;
};

/**
 * Describes the message common.v1.ResendSmsVerificationResponse.
 * Use `create(ResendSmsVerificationResponseSchema)` to create a new message.
 */
export const ResendSmsVerificationResponseSchema: GenMessage<ResendSmsVerificationResponse, ResendSmsVerificationResponseJson> = /*@__PURE__*/
  messageDesc(file_common_v1_mfa, 3);

/**
 * @generated from message common.v1.VerifySmsOtpRequest
 */
export type VerifySmsOtpRequest = Message<"common.v1.VerifySmsOtpRequest"> & {
  /**
   * 6 digit validation for now
   *
   * @generated from field: string otp = 1;
   */
  otp: string;
};

/**
 * @generated from message common.v1.VerifySmsOtpRequest
 */
export type VerifySmsOtpRequestJson = {
  /**
   * 6 digit validation for now
   *
   * @generated from field: string otp = 1;
   */
  otp?: string;
};

/**
 * Describes the message common.v1.VerifySmsOtpRequest.
 * Use `create(VerifySmsOtpRequestSchema)` to create a new message.
 */
export const VerifySmsOtpRequestSchema: GenMessage<VerifySmsOtpRequest, VerifySmsOtpRequestJson> = /*@__PURE__*/
  messageDesc(file_common_v1_mfa, 4);

/**
 * @generated from message common.v1.VerifySmsOtpResponse
 */
export type VerifySmsOtpResponse = Message<"common.v1.VerifySmsOtpResponse"> & {
  /**
   * True if OTP was verified
   *
   * @generated from field: bool verified = 1;
   */
  verified: boolean;

  /**
   * Error info (only exists on error)
   *
   * @generated from field: optional common.v1.VerifyErrorType error_type = 2;
   */
  errorType?: VerifyErrorType;

  /**
   * @generated from field: optional string error_message = 3;
   */
  errorMessage?: string;

  /**
   * Remaining attempts (0 means locked out)
   *
   * @generated from field: int32 attempts_remaining = 4;
   */
  attemptsRemaining: number;
};

/**
 * @generated from message common.v1.VerifySmsOtpResponse
 */
export type VerifySmsOtpResponseJson = {
  /**
   * True if OTP was verified
   *
   * @generated from field: bool verified = 1;
   */
  verified?: boolean;

  /**
   * Error info (only exists on error)
   *
   * @generated from field: optional common.v1.VerifyErrorType error_type = 2;
   */
  errorType?: VerifyErrorTypeJson;

  /**
   * @generated from field: optional string error_message = 3;
   */
  errorMessage?: string;

  /**
   * Remaining attempts (0 means locked out)
   *
   * @generated from field: int32 attempts_remaining = 4;
   */
  attemptsRemaining?: number;
};

/**
 * Describes the message common.v1.VerifySmsOtpResponse.
 * Use `create(VerifySmsOtpResponseSchema)` to create a new message.
 */
export const VerifySmsOtpResponseSchema: GenMessage<VerifySmsOtpResponse, VerifySmsOtpResponseJson> = /*@__PURE__*/
  messageDesc(file_common_v1_mfa, 5);

/**
 * @generated from enum common.v1.InitiateErrorType
 */
export enum InitiateErrorType {
  /**
   * Success
   *
   * @generated from enum value: INITIATE_ERROR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Rate limited
   *
   * @generated from enum value: INITIATE_ERROR_TYPE_RATE_LIMITED = 1;
   */
  RATE_LIMITED = 1,

  /**
   * Invalid phone number
   *
   * @generated from enum value: INITIATE_ERROR_TYPE_INVALID_PHONE = 2;
   */
  INVALID_PHONE = 2,

  /**
   * Service unavailable
   *
   * @generated from enum value: INITIATE_ERROR_TYPE_SERVICE_UNAVAILABLE = 3;
   */
  SERVICE_UNAVAILABLE = 3,

  /**
   * Session not found or expired
   *
   * @generated from enum value: INITIATE_ERROR_TYPE_INVALID_SESSION = 4;
   */
  INVALID_SESSION = 4,

  /**
   * Phone number already verified
   *
   * @generated from enum value: INITIATE_ERROR_TYPE_ALREADY_VERIFIED = 5;
   */
  ALREADY_VERIFIED = 5,
}

/**
 * @generated from enum common.v1.InitiateErrorType
 */
export type InitiateErrorTypeJson = "INITIATE_ERROR_TYPE_UNSPECIFIED" | "INITIATE_ERROR_TYPE_RATE_LIMITED" | "INITIATE_ERROR_TYPE_INVALID_PHONE" | "INITIATE_ERROR_TYPE_SERVICE_UNAVAILABLE" | "INITIATE_ERROR_TYPE_INVALID_SESSION" | "INITIATE_ERROR_TYPE_ALREADY_VERIFIED";

/**
 * Describes the enum common.v1.InitiateErrorType.
 */
export const InitiateErrorTypeSchema: GenEnum<InitiateErrorType, InitiateErrorTypeJson> = /*@__PURE__*/
  enumDesc(file_common_v1_mfa, 0);

/**
 * @generated from enum common.v1.ResendErrorType
 */
export enum ResendErrorType {
  /**
   * Success case - no error occurred
   *
   * @generated from enum value: RESEND_ERROR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Wait longer before resending
   *
   * @generated from enum value: RESEND_ERROR_TYPE_TOO_SOON = 1;
   */
  TOO_SOON = 1,

  /**
   * Session not found or expired
   *
   * @generated from enum value: RESEND_ERROR_TYPE_INVALID_SESSION = 2;
   */
  INVALID_SESSION = 2,

  /**
   * Max resend attempts reached
   *
   * @generated from enum value: RESEND_ERROR_TYPE_MAX_ATTEMPTS = 3;
   */
  MAX_ATTEMPTS = 3,

  /**
   * No pending OTP verification to resend
   *
   * @generated from enum value: RESEND_ERROR_TYPE_NO_PENDING_VERIFICATION = 4;
   */
  NO_PENDING_VERIFICATION = 4,

  /**
   * Generic service unavailable
   *
   * @generated from enum value: RESEND_ERROR_TYPE_SERVICE_UNAVAILABLE = 5;
   */
  SERVICE_UNAVAILABLE = 5,
}

/**
 * @generated from enum common.v1.ResendErrorType
 */
export type ResendErrorTypeJson = "RESEND_ERROR_TYPE_UNSPECIFIED" | "RESEND_ERROR_TYPE_TOO_SOON" | "RESEND_ERROR_TYPE_INVALID_SESSION" | "RESEND_ERROR_TYPE_MAX_ATTEMPTS" | "RESEND_ERROR_TYPE_NO_PENDING_VERIFICATION" | "RESEND_ERROR_TYPE_SERVICE_UNAVAILABLE";

/**
 * Describes the enum common.v1.ResendErrorType.
 */
export const ResendErrorTypeSchema: GenEnum<ResendErrorType, ResendErrorTypeJson> = /*@__PURE__*/
  enumDesc(file_common_v1_mfa, 1);

/**
 * @generated from enum common.v1.VerifyErrorType
 */
export enum VerifyErrorType {
  /**
   * OTP verified
   *
   * @generated from enum value: VERIFY_ERROR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * OTP incorrect
   *
   * @generated from enum value: VERIFY_ERROR_TYPE_INVALID_OTP = 1;
   */
  INVALID_OTP = 1,

  /**
   * OTP expired
   *
   * @generated from enum value: VERIFY_ERROR_TYPE_EXPIRED = 2;
   */
  EXPIRED = 2,

  /**
   * Too many failed attempts
   *
   * @generated from enum value: VERIFY_ERROR_TYPE_MAX_ATTEMPTS = 3;
   */
  MAX_ATTEMPTS = 3,

  /**
   * Registration session not found or expired
   *
   * @generated from enum value: VERIFY_ERROR_TYPE_INVALID_SESSION = 4;
   */
  INVALID_SESSION = 4,

  /**
   * No pending verification session exists
   *
   * @generated from enum value: VERIFY_ERROR_TYPE_NO_PENDING_VERIFICATION = 5;
   */
  NO_PENDING_VERIFICATION = 5,
}

/**
 * @generated from enum common.v1.VerifyErrorType
 */
export type VerifyErrorTypeJson = "VERIFY_ERROR_TYPE_UNSPECIFIED" | "VERIFY_ERROR_TYPE_INVALID_OTP" | "VERIFY_ERROR_TYPE_EXPIRED" | "VERIFY_ERROR_TYPE_MAX_ATTEMPTS" | "VERIFY_ERROR_TYPE_INVALID_SESSION" | "VERIFY_ERROR_TYPE_NO_PENDING_VERIFICATION";

/**
 * Describes the enum common.v1.VerifyErrorType.
 */
export const VerifyErrorTypeSchema: GenEnum<VerifyErrorType, VerifyErrorTypeJson> = /*@__PURE__*/
  enumDesc(file_common_v1_mfa, 2);

/**
 * @generated from service common.v1.MFAService
 */
export const MFAService: GenService<{
  /**
   * Send an OTP to session
   *
   * @generated from rpc common.v1.MFAService.InitiateSmsVerification
   */
  initiateSmsVerification: {
    methodKind: "unary";
    input: typeof InitiateSmsVerificationRequestSchema;
    output: typeof InitiateSmsVerificationResponseSchema;
  },
  /**
   * Resend OTP to session
   *
   * @generated from rpc common.v1.MFAService.ResendSmsVerification
   */
  resendSmsVerification: {
    methodKind: "unary";
    input: typeof ResendSmsVerificationRequestSchema;
    output: typeof ResendSmsVerificationResponseSchema;
  },
  /**
   * Verify OTP against session
   *
   * @generated from rpc common.v1.MFAService.VerifySmsOtp
   */
  verifySmsOtp: {
    methodKind: "unary";
    input: typeof VerifySmsOtpRequestSchema;
    output: typeof VerifySmsOtpResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_common_v1_mfa, 0);

